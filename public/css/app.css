.button,
a.button,
a.button:link,
a.button:visited {
  display: inline-block;
  font-family: 'Livory';
  font-size: 13px;
  text-transform: uppercase;
  color: #fff;
  background: #88101d;
  padding: 8px 12px 6px;
  -webkit-transition: background 0.2s;
  -moz-transition: background 0.2s;
  -o-transition: background 0.2s;
  -ms-transition: background 0.2s;
  transition: background 0.2s;
}
a.button:hover {
  background: #410a10;
  -webkit-transition: background 0.2s;
  -moz-transition: background 0.2s;
  -o-transition: background 0.2s;
  -ms-transition: background 0.2s;
  transition: background 0.2s;
}
.button--addFavorite,
.button--removeFavorite {
  position: absolute;
  top: 0;
  right: 0;
  width: 40px;
  height: 40px;
  color: #fff;
  font-size: 20px;
  cursor: pointer;
  -webkit-transition: opacity 0.2s;
  -moz-transition: opacity 0.2s;
  -o-transition: opacity 0.2s;
  -ms-transition: opacity 0.2s;
  transition: opacity 0.2s;
}
.button--addFavorite:hover .fa-heart,
.button--removeFavorite:hover .fa-heart {
  opacity: 1;
  -ms-filter: none;
  filter: none;
  -webkit-transition: opacity 0.2s;
  -moz-transition: opacity 0.2s;
  -o-transition: opacity 0.2s;
  -ms-transition: opacity 0.2s;
  transition: opacity 0.2s;
}
.button--addFavorite .fa,
.button--removeFavorite .fa {
  position: absolute;
  top: 11px;
  right: 10px;
}
.button--addFavorite .fa-heart,
.button--removeFavorite .fa-heart {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  -webkit-transition: opacity 0.2s;
  -moz-transition: opacity 0.2s;
  -o-transition: opacity 0.2s;
  -ms-transition: opacity 0.2s;
  transition: opacity 0.2s;
}
.button--addFavorite.inFavorites,
.button--removeFavorite.inFavorites {
  opacity: 1;
  -ms-filter: none;
  filter: none;
}
.button--addFavorite.inFavorites .fa-heart,
.button--removeFavorite.inFavorites .fa-heart {
  opacity: 1;
  -ms-filter: none;
  filter: none;
}
.button--removeFavorite {
  width: 30px;
  height: 30px;
  font-size: 16px;
  background: rgba(0,0,0,0.6);
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
}
.favoriteItem:hover .button--removeFavorite {
  opacity: 1;
  -ms-filter: none;
  filter: none;
}
.button--removeFavorite .fa {
  top: 7px;
  right: 8px;
}
@font-face {
  font-family: 'Livory';
  src: url("../fonts/2B8A5F_0_0.eot");
  src: url("../fonts/2B8A5F_0_0.eot?#iefix") format('embedded-opentype'), url("../fonts/2B8A5F_0_0.woff") format('woff'), url("../fonts/2B8A5F_0_0.ttf") format('truetype');
  font-weight: normal;
}
@font-face {
  font-family: 'MonteCarlo';
  src: url("../fonts/2B8A5F_1_0.eot");
  src: url("../fonts/2B8A5F_1_0.eot?#iefix") format('embedded-opentype'), url("../fonts/2B8A5F_1_0.woff") format('woff'), url("../fonts/2B8A5F_1_0.ttf") format('truetype');
  font-weight: normal;
}
@font-face {
  font-family: 'Serifiqo';
  src: url("../fonts/2B8A5F_2_0.eot");
  src: url("../fonts/2B8A5F_2_0.eot?#iefix") format('embedded-opentype'), url("../fonts/2B8A5F_2_0.woff") format('woff'), url("../fonts/2B8A5F_2_0.ttf") format('truetype');
  font-weight: normal;
}
@font-face {
  font-family: 'FontAwesome';
  src: url("../fonts/font-awesome/fontawesome-webfont.eot");
  src: url("../fonts/font-awesome/fontawesome-webfont.eot?#iefix") format('embedded-opentype'), url("../fonts/font-awesome/fontawesome-webfont.woff") format('woff'), url("../fonts/font-awesome/fontawesome-webfont.ttf") format('truetype');
  font-weight: normal;
}
h1 {
  font-family: 'Serifiqo';
  font-size: 44px;
  font-weight: lighter;
}
h2 {
  font-family: 'MonteCarlo';
  font-size: 30px;
  color: #a46118;
  font-weight: lighter;
}
h3 {
  font-family: 'Serifiqo';
  font-size: 22px;
  line-height: 34px;
  font-weight: lighter;
  color: #a46118;
  margin: 0 0 8px;
}
h4 {
  font-family: 'Livory';
  font-size: 12px;
  text-transform: uppercase;
  font-weight: normal;
  color: #88101d;
  margin-bottom: 15px;
}
p {
  font-size: 15px;
  line-height: 21px;
  margin: 0;
}
a,
a:link,
a:visited {
  color: #b70014;
  text-decoration: none;
  -webkit-transition: color 0.2s;
  -moz-transition: color 0.2s;
  -o-transition: color 0.2s;
  -ms-transition: color 0.2s;
  transition: color 0.2s;
}
.global-nav a,
.global-nav a:link,
.global-nav a:visited {
  color: #fff;
}
.global-nav a:hover,
.global-nav a:link:hover,
.global-nav a:visited:hover {
  color: #ffd88c;
}
a:hover {
  color: #88101d;
  -webkit-transition: color 0.2s;
  -moz-transition: color 0.2s;
  -o-transition: color 0.2s;
  -ms-transition: color 0.2s;
  transition: color 0.2s;
}
.page-title {
  text-align: center;
  margin: 40px 0 30px;
}
.photo-credits {
  font-size: 12rem;
  line-height: 16rem;
  color: #a5a5a5;
}
.small {
  font-size: 12px;
  line-height: 16px;
}
@media only screen and (max-width: 500px) {
  h1 {
    font-size: 34px;
  }
  h3 {
    font-size: 22px;
    line-height: 28px;
  }
}
*,
*:before,
*:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
html,
body {
  margin: 0;
  padding: 0;
}
body {
  font-family: 'Livory';
  font-size: 10px;
}
.center {
  width: 1200px;
  margin: 0 auto;
}
.content-container {
  padding: 30px 0;
}
body.home .content-container {
  padding: 0;
}
.slimContainer {
  width: 50%;
}
.outline {
  display: inline-block;
  margin: 0;
  padding: 0;
  overflow: hidden;
}
.outline li {
  display: block;
  float: left;
  font-size: 12px;
  text-transform: uppercase;
  color: #b70014;
  border: 1px solid #dcd4cc;
  margin: 0 2px 4px;
  padding: 7px 12px;
  cursor: pointer;
  -webkit-transition: all 0.2s;
  -moz-transition: all 0.2s;
  -o-transition: all 0.2s;
  -ms-transition: all 0.2s;
  transition: all 0.2s;
}
.outline li:hover {
  border: 1px solid #b70014;
  -webkit-transition: all 0.2s;
  -moz-transition: all 0.2s;
  -o-transition: all 0.2s;
  -ms-transition: all 0.2s;
  transition: all 0.2s;
}
.outline li.active {
  border: 1px solid #b70014;
}
@media only screen and (max-width: 1260px) {
  .center {
    width: 100%;
    padding: 0 30px;
  }
  .slimContainer {
    width: 60%;
  }
}
@media only screen and (max-width: 768px) {
  .center {
    padding: 0 20px;
  }
  .slimContainer {
    width: 80%;
  }
}
@media only screen and (max-width: 500px) {
  .center {
    padding: 0 15px;
  }
  .slimContainer {
    width: 100%;
  }
}
.inputGroup,
.favoritesGroup {
  position: relative;
  overflow: hidden;
  margin-bottom: 20px;
}
.submitGroup {
  padding-left: 25%;
}
.submitGroup .button {
  width: 100%;
  text-align: center;
}
label,
p.label {
  display: block;
  float: left;
  width: 25%;
  font-size: 15px;
  text-transform: uppercase;
  color: #7e5f4c;
  padding: 10px 0 6px;
}
input[type='text'],
input[type='email'],
textarea {
  display: block;
  width: 75%;
  font-family: 'Livory';
  font-size: 15px;
  line-height: 22px;
  border: 1px solid #d6cdbc;
  outline: none;
  padding: 8px 25px 7px 12px;
}
.has-errors input[type='text'],
.has-errors input[type='email'],
.has-errors textarea {
  border: 1px solid #a46118;
}
textarea {
  height: 100px;
  resize: vertical;
}
.contactFormContainer .fa-check,
.contactFormContainer .fa-times {
  display: none;
  position: absolute;
  top: 15px;
  right: 10px;
  font-size: 10px;
  color: #008000;
}
.contactFormContainer .fa-times {
  color: #a46118;
}
.contactFormContainer .valid .fa-check {
  display: block;
}
.contactFormContainer .invalid .fa-times {
  display: block;
}
.errors {
  display: none;
  width: 75%;
  float: right;
  background: #a46118;
  list-style: none;
  margin: 0;
  padding: 0;
}
.invalid .errors {
  display: block;
}
.errors li {
  display: none;
  font-size: 12px;
  color: #fff;
  padding: 7px 10px;
}
@media only screen and (max-width: 400px) {
  .inputGroup {
    margin-bottom: 15px;
  }
  .submitGroup {
    margin-top: 20px;
    padding: 0;
  }
  label,
  p.label,
  input[type='text'],
  input[type='email'],
  textarea,
  ul.options {
    width: 100%;
    float: none;
    text-align: center;
  }
  label {
    margin-bottom: 5px;
    padding: 0;
  }
  ul.options li {
    float: none;
    display: inline-block;
  }
  .errors {
    width: 100%;
  }
  .contactFormContainer .fa-check,
  .contactFormContainer .fa-times {
    top: 39px;
  }
}
.global-footer {
  background: #b0977c;
  padding: 20px 0;
  margin-top: 60px;
}
.global-footer p {
  font-size: 0.7rem;
  line-height: 1rem;
  color: #fff;
  margin: 0;
}
.global-footer a {
  color: #ffd88c;
}
.global-footer a:hover {
  color: #fff;
}
.global-footer .center {
  overflow: hidden;
}
.global-footer .social {
  float: left;
  max-width: 300px;
}
.global-footer .social .facebook {
  display: block;
  float: left;
  width: 30px;
  height: 30px;
  font-size: 1.2rem;
  color: #fff;
  background: #7e5f4c;
  margin-right: 10px;
  padding-top: 3px;
  text-align: center;
}
.global-footer .social .facebook:hover {
  background: #88101d;
}
.global-footer .legal {
  float: right;
  text-align: right;
}
* {
  margin: 0;
}
html,
body {
  height: 100%;
}
.page-wrap {
  min-height: 100%;
/* equal to footer height */
  margin-bottom: -130px;
}
.page-wrap:after {
  content: "";
  display: block;
}
.global-footer {
  height: 70px;
  margin-top: 60px;
}
.page-wrap:after {
/* .push must be the same height as footer */
  height: 130px;
}
@media only screen and (max-width: 500px) {
  .global-footer {
    height: 120px;
  }
  .global-footer .social {
    float: none;
    width: 100%;
    margin-bottom: 15px;
  }
  .global-footer .legal {
    float: none;
    text-align: left;
  }
  .page-wrap {
    margin-bottom: -120px;
  }
  .page-wrap:after {
    height: 120px;
  }
}
.global-header {
  margin-bottom: 30px;
}
.global-header .website-title {
  text-align: center;
  padding: 5px 0 7px;
}
.global-header .website-title h1 {
  margin: 0;
}
.global-header .website-title h2 {
  display: none;
  margin: -5px 0 0;
}
.global-header .global-nav {
  text-align: center;
  background: #410a10 url("../img/global/bg_nav.png") repeat-x center center;
}
.global-header .global-nav .nav-container {
  display: inline-block;
  background: #410a10;
  padding: 0 30px;
}
.global-header .global-nav a:link,
.global-header .global-nav a:visited {
  display: block;
  float: left;
  font-family: 'Serifiqo';
  font-size: 1.4rem;
  color: #fff;
  text-decoration: none;
  text-transform: uppercase;
  padding: 13px 20px 8px;
}
.global-header .global-nav a:hover {
  color: #ffd88c;
  -webkit-transition: color 0.2s ease;
  -moz-transition: color 0.2s ease;
  -o-transition: color 0.2s ease;
  -ms-transition: color 0.2s ease;
  transition: color 0.2s ease;
}
.global-header .global-nav a.active {
  color: #ffd88c;
}
@media only screen and (max-width: 500px) {
  .global-header .global-nav {
    background: #410a10;
  }
  .global-header .global-nav .nav-container {
    padding: 0;
  }
  .global-header .global-nav a:link,
  .global-header .global-nav a:visited {
    font-size: 1.1rem;
    padding: 10px 15px 6px;
  }
  .global-header .global-nav a:link:first-child,
  .global-header .global-nav a:visited:first-child {
    padding-left: 0;
  }
  .global-header .global-nav a:link:last-child,
  .global-header .global-nav a:visited:last-child {
    padding-right: 0;
  }
}
body.contact .contactSuccess {
  display: none;
  text-align: center;
  background: #ebe7e3;
  margin: 0 auto;
  padding: 20px 20px 0;
  margin-bottom: 10px;
}
body.contact .contactSuccess img {
  display: inline-block;
  max-width: 100%;
  margin-top: 30px;
}
body.contact .contactFormContainer {
  background: #ebe7e3;
  margin: 0 auto;
  padding: 20px;
}
body.contact .outline {
  margin-top: 4px;
}
body.contact .outline li {
  margin-bottom: 0;
}
body.contact .noFavorites {
  display: none;
}
body.contact .favoritesList {
  width: 75%;
  float: left;
  list-style: none;
  background: #d6cdbc;
  margin: 0;
  padding: 14px 10px 6px;
}
body.contact .favoritesList li {
  position: relative;
  display: inline-block;
  width: 31.25%;
  height: 105px;
  margin: 0 1% 2%;
  vertical-align: top;
  overflow: hidden;
}
body.contact .favoritesList li img {
  width: 100%;
}
body.contact .button--contactSubmit {
  position: relative;
}
body.contact .spinner {
  display: none;
  position: absolute;
  top: 7px;
  margin-left: 10px;
}
body.contact .spinner.show {
  display: inline-block;
}
body.faq .questions {
  width: 50%;
  margin: 0 auto;
}
body.faq .questions p.question {
  color: #a46118;
  border-bottom: 3px solid #ebe7e3;
  margin-bottom: 5px;
  padding-bottom: 2px;
}
body.faq .questions article {
  margin-bottom: 30px;
}
@media only screen and (max-width: 768px) {
  body.faq .questions {
    width: 100%;
  }
}
body.home .global-header {
  padding: 20px 0 190px;
  margin-bottom: 0;
}
body.home .website-title {
  position: absolute;
  top: 85px;
  width: 100%;
  padding: 0;
}
body.home .website-title h1 {
  font-size: 88px;
  margin-bottom: 10px;
}
body.home .website-title h2 {
  display: block;
}
body.home .content-container {
  padding-bottom: 30px;
}
body.home .center {
  overflow: hidden;
}
body.home .hero {
  height: 500px;
  background: #000;
  margin-bottom: 30px;
  overflow: hidden;
}
body.home .hero .center {
  position: relative;
  height: 100%;
  overflow: visible;
}
body.home .heroImage {
  position: absolute;
  top: -180px;
  left: -250px;
}
body.home .colorSelector {
  position: relative;
  float: right;
  width: 415px;
  text-align: center;
  color: #fff;
  margin-top: 140px;
}
body.home .colorSelector p {
  color: #ffd88c;
  margin-bottom: 20px;
}
body.home .colorSelector ul {
  margin-bottom: 20px;
}
body.home .colorSelector ul li {
  color: #fff;
  border: 1px solid rgba(255,255,255,0.2);
}
body.home .colorSelector ul li:hover {
  border: 1px solid #fff;
}
body.home .colorImages {
  position: relative;
  width: 250px;
  height: 150px;
  margin: 0 auto;
}
body.home .colorImages img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  -webkit-transition: opacity 0.2s;
  -moz-transition: opacity 0.2s;
  -o-transition: opacity 0.2s;
  -ms-transition: opacity 0.2s;
  transition: opacity 0.2s;
}
body.home .colorImages .active {
  opacity: 1;
  -ms-filter: none;
  filter: none;
  -webkit-transition: opacity 0.2s;
  -moz-transition: opacity 0.2s;
  -o-transition: opacity 0.2s;
  -ms-transition: opacity 0.2s;
  transition: opacity 0.2s;
}
body.home .intro {
  float: left;
  width: 40%;
  padding-right: 20px;
}
body.home .gallery--spotlight {
  float: left;
  width: 60%;
  padding-left: 20px;
  border-left: 2px solid #e6e6e6;
}
body.home .gallery--spotlight h3 {
  margin-bottom: 20px;
}
body.home .gallery--spotlight ul {
  margin: 0;
  padding: 0;
  list-style: none;
  overflow: hidden;
}
body.home .gallery--spotlight li {
  float: left;
  width: 22%;
  margin-left: 4%;
}
body.home .gallery--spotlight li:first-child {
  margin-left: 0;
}
body.home .gallery--spotlight img {
  width: 100%;
  height: 100%;
}
@media only screen and (max-width: 1260px) {
  body.home .hero {
    height: 0;
    padding-bottom: 40%;
  }
  body.home .hero .colorSelector {
    margin-top: 11%;
    margin-right: 5%;
  }
  body.home .heroImage {
    top: -80px;
    left: -15%;
    max-width: 70%;
  }
}
@media only screen and (max-width: 1000px) {
  body.home .global-header {
    padding-bottom: 160px;
  }
  body.home .website-title h1 {
    font-size: 68px;
  }
  body.home .hero {
    padding-bottom: 400px;
  }
  body.home .hero .colorSelector {
    float: left;
    margin-top: 90px;
    margin-right: 0;
  }
  body.home .heroImage {
    top: -130px;
    left: auto;
    right: -40px;
    max-width: 90%;
    opacity: 0.5;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
    filter: alpha(opacity=50);
  }
}
@media only screen and (max-width: 768px) {
  body.home .global-header {
    padding-bottom: 140px;
  }
  body.home .global-header h1 {
    font-size: 58px;
  }
  body.home .global-header h2 {
    font-size: 27px;
  }
  body.home .hero {
    padding-bottom: 300px;
  }
  body.home .hero .colorSelector {
    margin-top: 30px;
  }
  body.home .heroImage {
    max-width: 100%;
    right: -110px;
  }
  body.home .intro {
    width: 50%;
  }
  body.home .gallery--spotlight {
    width: 50%;
  }
}
@media only screen and (max-width: 700px) {
  body.home .heroImage {
    right: -160px;
  }
}
@media only screen and (max-width: 600px) {
  body.home .global-header {
    padding-bottom: 120px;
  }
  body.home .global-header h1 {
    font-size: 48px;
  }
  body.home .global-header h2 {
    font-size: 22px;
  }
  body.home .hero {
    height: auto;
    padding: 20px 0;
    margin-bottom: 20px;
  }
  body.home .hero .colorSelector {
    width: 100%;
    text-align: center;
    margin-top: 0;
  }
  body.home .hero .colorSelector li {
    display: inline-block;
    float: none;
  }
  body.home .heroImage {
    display: none;
  }
  body.home .intro {
    float: none;
    width: 100%;
    text-align: center;
    padding: 0;
    margin-bottom: 25px;
  }
  body.home .gallery--spotlight {
    float: none;
    width: 100%;
    text-align: center;
    background: #ebe7e3;
    border: 0;
    padding: 10px;
  }
  body.home .gallery--spotlight h3 {
    margin-bottom: 10px;
  }
}
@media only screen and (max-width: 500px) {
  body.home .global-header {
    padding-top: 0;
    padding-bottom: 75px;
  }
  body.home .global-nav {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
  }
  body.home .website-title {
    position: relative;
    top: 60px;
  }
  body.home .website-title h1 {
    font-size: 34px;
    margin-bottom: 20px;
  }
}
body.tack .page-wrap > .center {
  overflow: hidden;
}
body.tack .utilities {
  float: left;
  width: 25%;
  background: #ebe7e3;
  padding: 20px;
}
body.tack .utilities > article {
  border-bottom: 2px solid #d6cdbc;
  margin-bottom: 15px;
  padding-bottom: 25px;
}
body.tack .utilities > article:last-child {
  border-bottom: none;
  margin-bottom: 0;
  padding-bottom: 0;
}
body.tack .utilities p {
  color: #7e5f4c;
}
body.tack .colorFilters {
  overflow: hidden;
  text-align: center;
}
body.tack .colorFilters > * {
  vertical-align: top;
}
body.tack .colorFilters p {
  display: inline-block;
  width: 100%;
  text-align: left;
  font-size: 15px;
  padding: 0 15px 10px 0;
}
body.tack .favorites {
  border-bottom: 2px solid #d6cdbc;
}
body.tack .favorites .button {
  width: 100%;
  text-align: center;
}
body.tack .favoritesList {
  list-style: none;
  background: #d6cdbc;
  margin: 0 0 20px;
  padding: 2%;
}
body.tack .favoritesList li {
  position: relative;
  display: inline-block;
  width: 46%;
  height: 0;
  margin: 2%;
  padding-bottom: 46%;
  vertical-align: top;
  overflow: hidden;
}
body.tack .favoritesList li img {
  width: 100%;
}
body.tack .favoritesList li.noFavoritesPrompt {
  display: none;
  width: 100%;
  text-align: center;
}
body.tack .favoritesList.noFavorites .noFavoritesPrompt {
  display: block;
  height: auto;
  margin: 0;
  padding: 5%;
}
body.tack .pricing {
  padding-top: 8px;
}
body.tack .pricing p {
  margin-bottom: 15px;
}
body.tack .pricing p:last-child {
  margin-bottom: 0;
}
body.tack .tackLoading {
  position: absolute;
  left: 50%;
  display: none;
  width: 200px;
  text-align: center;
  background: rgba(255,255,255,0.9);
  border: 1px solid #d6cdbc;
  margin-top: 200px;
  margin-left: -100px;
  padding: 20px;
  z-index: 9999;
}
body.tack .tackLoading.show {
  display: block;
}
body.tack .tackContainer {
  position: relative;
  float: right;
  width: 75%;
  min-height: 400px;
  overflow: hidden;
  margin: 0 -1.25%;
}
body.tack .tackItem {
  display: none;
  position: relative;
  vertical-align: top;
  width: 22.5%;
  height: 0;
  margin: 0 1.25% 2.5%;
  padding-bottom: 22.5%;
  overflow: hidden;
}
body.tack .tackItem a {
  display: block;
}
body.tack .tackItem img {
  width: 100%;
  background: #88101d;
}
body.tack .meta {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  min-height: 40px;
  background: rgba(0,0,0,0.6);
  padding: 12px 12px;
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
}
body.tack .price {
  font-size: 15px;
  color: #fff;
}
body.tack .tackItem:hover .meta {
  opacity: 1;
  -ms-filter: none;
  filter: none;
  -webkit-transition: opacity 0.2s;
  -moz-transition: opacity 0.2s;
  -o-transition: opacity 0.2s;
  -ms-transition: opacity 0.2s;
  transition: opacity 0.2s;
}
@media only screen and (max-width: 860px) {
  body.tack .utilities {
    width: 100%;
    margin-bottom: 20px;
    padding: 15px;
  }
  body.tack .utilities > article {
    margin-bottom: 15px;
    padding-bottom: 15px;
  }
  body.tack .utilities .colorFilters p {
    text-align: center;
    padding-right: 0;
  }
  body.tack .utilities .favorites {
    text-align: center;
    border-bottom: none;
    margin-bottom: 0;
    padding-bottom: 0;
  }
  body.tack .utilities .favorites .button {
    width: auto;
  }
  body.tack .utilities .favoritesList {
    padding: 0.5%;
  }
  body.tack .utilities .favoritesList li {
    width: 15.65%;
    margin: 0.5%;
    padding-bottom: 15.65%;
  }
  body.tack .utilities .favoritesList .noFavoritesPrompt {
    width: 100%;
    margin: 0;
    padding: 1%;
  }
  body.tack .utilities .pricing {
    display: none;
  }
  body.tack .tackContainer {
    width: 100%;
    margin: 0;
  }
}
@media only screen and (max-width: 600px) {
  body.tack .utilities .colorFilters {
    border-bottom: 0;
    margin-bottom: 0;
    padding-bottom: 0;
  }
  body.tack .utilities .colorFilters ul {
    text-align: center;
  }
  body.tack .utilities .colorFilters ul li {
    display: inline-block;
    float: none;
  }
  body.tack .utilities .favorites {
    display: none;
    border-bottom: none;
    margin-bottom: 0;
    padding-bottom: 0;
  }
  body.tack .utilities .pricing {
    display: none;
  }
  body.tack .tackLoading {
    margin-top: 100px;
  }
  body.tack .tackContainer {
    width: 100%;
  }
}
@media only screen and (max-width: 450px) {
  body.tack .tackItem {
    width: 30.5%;
    height: 0;
    padding-bottom: 31%;
  }
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2FwcC9zdHlsZXMvYmFzZS9idXR0b25zLnN0eWwiLCIuLi8uLi9ub2RlX21vZHVsZXMvbmliL2xpYi9uaWIvZmxleC5zdHlsIiwiLi4vLi4vbm9kZV9tb2R1bGVzL25pYi9saWIvbmliL3ZlbmRvci5zdHlsIiwiLi4vLi4vYXBwL3N0eWxlcy9iYXNlL3R5cG9ncmFwaHkuc3R5bCIsIi4uLy4uL25vZGVfbW9kdWxlcy9ydXB0dXJlL3J1cHR1cmUvaW5kZXguc3R5bCIsIi4uLy4uL2FwcC9zdHlsZXMvYmFzZS9sYXlvdXQuc3R5bCIsIi4uLy4uL25vZGVfbW9kdWxlcy9uaWIvbGliL25pYi9vdmVyZmxvdy5zdHlsIiwiLi4vLi4vbm9kZV9tb2R1bGVzL25pYi9saWIvbmliL2JvcmRlci5zdHlsIiwiLi4vLi4vYXBwL3N0eWxlcy9iYXNlL2Zvcm1zLnN0eWwiLCIuLi8uLi9hcHAvc3R5bGVzL3BhcnRpYWxzL2Zvb3Rlci5zdHlsIiwiLi4vLi4vYXBwL3N0eWxlcy9wYXJ0aWFscy9oZWFkZXIuc3R5bCIsIi4uLy4uL2FwcC9zdHlsZXMvdmlld3MvY29udGFjdC5zdHlsIiwiLi4vLi4vYXBwL3N0eWxlcy92aWV3cy9mYXEuc3R5bCIsIi4uLy4uL2FwcC9zdHlsZXMvdmlld3MvaG9tZS5zdHlsIiwiLi4vLi4vYXBwL3N0eWxlcy92aWV3cy90YWNrLnN0eWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7QUFBUTtBQUNVO0FBQ2U7RUNnQjdCLFNBQVMsYUFBVDtFRGJBLGFBQVksU0FBWjtFQUNBLFdBQVUsS0FBVjtFQUNBLGdCQUFlLFVBQWY7RUFDQSxPQUFNLEtBQU47RUU0aEJBLFlBQVcsUUFBWDtFRjFoQkEsU0FBUSxhQUFSO0VFMkJjLG9CQUFzQyxnQkFBdEM7RUFBQSxpQkFBc0MsZ0JBQXRDO0VBQUEsZUFBc0MsZ0JBQXRDO0VBQUEsZ0JBQXNDLGdCQUF0QztFQVJILFlBQStCLGdCQUEvQjs7QUZoQmY7RUV1aEJJLFlBQVcsUUFBWDtFQS9m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Q0EsU0FBUSxHQUFSOztBQUVSO0libkxSLFNBQVMsS0FBVDs7QWFzTEk7SUFDSSxPQUFNLEtBQU47SUFDQSxRQUFPLEVBQVA7OztBVjVGSDtBVXFHRztJQUNJLGVBQWMsRUFBZDtJQUNBLGVBQWMsRUFBZDtJQUNBLGdCQUFlLEVBQWY7O0FBRUE7SUFDSSxZQUFXLE9BQVg7O0FBRUE7SWJ6TWhCLFNBQVMsYUFBVDtJYTJNb0IsT0FBTSxLQUFOOztBQUVaO0liN01SLFNBQVMsS0FBVDtJYStNWSxlQUFjLEtBQWQ7SUFDQSxlQUFjLEVBQWQ7SUFDQSxnQkFBZSxFQUFmOztBQUVKO0libk5SLFNBQVMsS0FBVDs7QWFzTkk7SUFDSSxZQUFXLE1BQVg7O0FBRUo7SUFDSSxPQUFNLEtBQU47OztBVjlISDtBVWlJRDtJQUNJLE9BQU0sTUFBTjtJQUNBLFFBQU8sRUFBUDtJQUNBLGdCQUFlLElBQWYiLCJmaWxlIjoiYXBwLmNzcyIsInNvdXJjZVJvb3QiOiIuIiwic291cmNlc0NvbnRlbnQiOlsiLy9cbi8vIEJ1dHRvbiBzdHlsZXNcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5idXR0b24sXG5hLmJ1dHRvbixcbmEuYnV0dG9uOmxpbmssXG5hLmJ1dHRvbjp2aXNpdGVkXG4gICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICBmb250LWZhbWlseSAkbGl2b3J5XG4gICAgZm9udC1zaXplIDEzcHhcbiAgICB0ZXh0LXRyYW5zZm9ybSB1cHBlcmNhc2VcbiAgICBjb2xvciAkd2hpdGVcbiAgICBiYWNrZ3JvdW5kICRjcmFuYmVycnlcbiAgICBwYWRkaW5nIDhweCAxMnB4IDZweFxuICAgIHRyYW5zaXRpb24gYmFja2dyb3VuZCAuMnNcblxuYS5idXR0b246aG92ZXJcbiAgICBiYWNrZ3JvdW5kICRjcmFuYmVycnktZGFya1xuICAgIHRyYW5zaXRpb24gYmFja2dyb3VuZCAuMnNcblxuXG4vLyBGYXZvcml0ZSAnaGVhcnQnIGJ1dHRvbnNcblxuLmJ1dHRvbi0tYWRkRmF2b3JpdGUsXG4uYnV0dG9uLS1yZW1vdmVGYXZvcml0ZVxuICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgdG9wIDBcbiAgICByaWdodCAwXG4gICAgd2lkdGggNDBweFxuICAgIGhlaWdodCA0MHB4XG4gICAgY29sb3IgJHdoaXRlXG4gICAgZm9udC1zaXplIDIwcHhcbiAgICAvL29wYWNpdHkgMVxuICAgIGN1cnNvciBwb2ludGVyXG4gICAgdHJhbnNpdGlvbiBvcGFjaXR5IC4yc1xuXG4gICAgLy8gLnRhY2tDb250YWluZXIgZGl2OmhvdmVyICYsXG4gICAgLy8gLmZhdm9yaXRlc0l0ZW06aG92ZXIgJlxuICAgIC8vICAgICBvcGFjaXR5IDFcbiAgICAvLyAgICAgdHJhbnNpdGlvbiBvcGFjaXR5IC4yc1xuXG4gICAgJjpob3ZlclxuICAgICAgICAuZmEtaGVhcnRcbiAgICAgICAgICAgIG9wYWNpdHkgMVxuICAgICAgICAgICAgdHJhbnNpdGlvbiBvcGFjaXR5IC4yc1xuXG4gICAgLmZhXG4gICAgICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgICAgIHRvcCAxMXB4XG4gICAgICAgIHJpZ2h0IDEwcHhcblxuICAgIC5mYS1oZWFydFxuICAgICAgICBvcGFjaXR5IDBcbiAgICAgICAgdHJhbnNpdGlvbiBvcGFjaXR5IC4yc1xuXG4gICAgJi5pbkZhdm9yaXRlc1xuICAgICAgICBvcGFjaXR5IDFcblxuICAgICAgICAuZmEtaGVhcnRcbiAgICAgICAgICAgIG9wYWNpdHkgMVxuXG5cbi8vIEZhdm9yaXRlICd4JyBidXR0b25cblxuLmJ1dHRvbi0tcmVtb3ZlRmF2b3JpdGVcbiAgICB3aWR0aCAzMHB4XG4gICAgaGVpZ2h0IDMwcHhcbiAgICBmb250LXNpemUgMTZweFxuICAgIGJhY2tncm91bmQgcmdiYSgwLCAwLCAwLCAuNilcbiAgICBvcGFjaXR5IDBcblxuICAgIC5mYXZvcml0ZUl0ZW06aG92ZXIgJlxuICAgICAgICBvcGFjaXR5IDFcblxuICAgIC5mYVxuICAgICAgICB0b3AgN3B4XG4gICAgICAgIHJpZ2h0IDhweFxuIiwiLypcbiAqIFZlbmRvciBcImRpc3BsYXk6IGZsZXhcIiBzdXBwb3J0IHdpdGggZmFsbGJhY2sgdG8gb2Jzb2xldGUgdmVyc2lvbnMuXG4gKi9cblxuZmxleC12ZXJzaW9uID89IGJveCBmbGV4XG5cbi8vXG4vLyAxLiBEaXNwbGF5IHZhbHVlc1xuLy8gICAgLSBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLWZsZXhib3gvI2ZsZXgtY29udGFpbmVyc1xuLy9cbmRpc3BsYXkodHlwZSwgYXJncy4uLilcbiAgaWYgZmxleCA9PSB0eXBlIHx8IGlubGluZS1mbGV4ID09IHR5cGVcbiAgICBpZiBib3ggaW4gZmxleC12ZXJzaW9uXG4gICAgICBpZiBmbGV4ID09IHR5cGVcbiAgICAgICAgZGlzcGxheTogLW1zLWZsZXhib3ggYXJnc1xuICAgICAgICBkaXNwbGF5OiB2ZW5kb3ItdmFsdWUoYm94IGFyZ3MsIG9ubHk6IG1veiB3ZWJraXQpXG4gICAgICBlbHNlXG4gICAgICAgIGRpc3BsYXk6IC1tcy1pbmxpbmUtZmxleGJveCBhcmdzXG4gICAgICAgIGRpc3BsYXk6IHZlbmRvci12YWx1ZShpbmxpbmUtYm94IGFyZ3MsIG9ubHk6IG1veiB3ZWJraXQpXG4gICAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICAgIGRpc3BsYXk6IHZlbmRvci12YWx1ZShhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBvZmZpY2lhbCkgLy8gb3ZlcndyaXRlcyBvbGQgd2Via2l0XG4gIGVsc2VcbiAgICBkaXNwbGF5OiBhcmd1bWVudHNcblxuLypcbiAqIE5ldyBzeW50YXggZm9yIGJyb3dzZXJzIGxpa2UgR29vZ2xlIENocm9tZS5cbiAqIFBsdXMgYSB0cmFuc2xhdGlvbiB0byB0aGUgb2xkIHN5bnRheCwgaWYgcG9zc2libGUuXG4gKi9cblxuXG4vL1xuLy8gNS4gT3JkZXJpbmcgYW5kIE9yaWVudGF0aW9uXG4vLyAgICAtIGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtZmxleGJveC8jb3JkZXJpbmctYW5kLW9yaWVudGF0aW9uXG4vL1xuLWZsZXgtb2Jzb2xldGUtZGlyZWN0aW9uKGRpcmVjdGlvbilcbiAgaWYgYm94IGluIGZsZXgtdmVyc2lvblxuICAgIGlmIHJvdy1yZXZlcnNlID09IGRpcmVjdGlvbiB8fCBjb2x1bW4tcmV2ZXJzZSA9PSBkaXJlY3Rpb25cbiAgICAgIHZlbmRvcignYm94LWRpcmVjdGlvbicsIHJldmVyc2UsIGlnbm9yZTogbXMgb2ZmaWNpYWwpXG5cbiAgICBpZiByb3cgPT0gZGlyZWN0aW9uIHx8IHJvdy1yZXZlcnNlID09IGRpcmVjdGlvblxuICAgICAgdmVuZG9yKCdib3gtb3JpZW50JywgaG9yaXpvbnRhbCwgaWdub3JlOiBtcyBvZmZpY2lhbClcbiAgICBlbHNlIGlmIGNvbHVtbiA9PSBkaXJlY3Rpb24gfHwgY29sdW1uLXJldmVyc2UgPT0gZGlyZWN0aW9uXG4gICAgICB2ZW5kb3IoJ2JveC1vcmllbnQnLCB2ZXJ0aWNhbCwgaWdub3JlOiBtcyBvZmZpY2lhbClcblxuLWZsZXgtb2Jzb2xldGUtd3JhcCh2YWx1ZSlcbiAgaWYgYm94IGluIGZsZXgtdmVyc2lvblxuICAgIC8vIFdBUk46IHdyYXAtcmV2ZXJzZSBkb2VzIG5vdCBoYXZlIGEgYm94IGVxdWl2YWxlbnQuIFRoaXMgd2lsbCByZW5kZXIgaW4gZGlmZmVyZW50IG1hbm5lcnNcbiAgICAvLyAgICBvbiBib3ggdnMuIGZsZXggdmFsdWVzLlxuICAgIGlmICd3cmFwJyA9PSB2YWx1ZSB8fCB3cmFwLXJldmVyc2UgPT0gdmFsdWVcbiAgICAgIHZlbmRvcignYm94LWxpbmVzJywgbXVsdGlwbGUsIGlnbm9yZTogbXMgb2ZmaWNpYWwpXG4gICAgZWxzZSBpZiBub3dyYXAgPT0gdmFsdWVcbiAgICAgIHZlbmRvcignYm94LWxpbmVzJywgc2luZ2xlLCBpZ25vcmU6IG1zIG9mZmljaWFsKVxuXG5mbGV4LWRpcmVjdGlvbihkaXJlY3Rpb24pXG4gIC8vIG9ic29sZXRlXG4gIC1mbGV4LW9ic29sZXRlLWRpcmVjdGlvbihkaXJlY3Rpb24pXG5cbiAgLy8gbmV3XG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LWRpcmVjdGlvbicsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1zIG9mZmljaWFsKVxuXG5mbGV4LXdyYXAodmFsdWUpXG4gIC8vIG9ic29sZXRlXG4gIC1mbGV4LW9ic29sZXRlLXdyYXAodmFsdWUpXG5cbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgtd3JhcCcsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1zIG9mZmljaWFsKVxuXG5mbGV4LWZsb3coKVxuICAvLyBvYnNvbGV0ZVxuICAtZmxleC1vYnNvbGV0ZS1kaXJlY3Rpb24oYXJndW1lbnRzWzBdKVxuICAtZmxleC1vYnNvbGV0ZS1kaXJlY3Rpb24oYXJndW1lbnRzWzFdKVxuICAtZmxleC1vYnNvbGV0ZS13cmFwKGFyZ3VtZW50c1swXSlcbiAgLWZsZXgtb2Jzb2xldGUtd3JhcChhcmd1bWVudHNbMV0pXG5cbiAgLy8gbmV3XG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LWZsb3cnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtcyBvZmZpY2lhbClcblxuXG5vcmRlcigpXG4gIC8vIG9ic29sZXRlXG4gIGlmIGJveCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2JveC1vcmRpbmFsLWdyb3VwJywgYXJndW1lbnRzLCBpZ25vcmU6IG1zIG9mZmljaWFsKVxuXG4gIC8vIG5ld1xuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1vcmRlcicsIGFyZ3VtZW50cywgb25seTogbXMpXG4gICAgdmVuZG9yKCdvcmRlcicsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG5cbi8vXG4vLyA3LiBGbGV4aWJpbGl0eVxuLy8gICAgLSBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLWZsZXhib3gvI2ZsZXhpYmlsaXR5XG4vL1xuZmxleC1ncm93KGdyb3d0aClcbiAgLy8gb2Jzb2xldGVcbiAgaWYgYm94IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignYm94LWZsZXgnLCBncm93dGgpXG5cbiAgLy8gbmV3XG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LWdyb3cnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuZmxleC1iYXNpcygpXG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LWJhc2lzJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbmZsZXgtc2hyaW5rKClcbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgtc2hyaW5rJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbmZsZXgoZ3Jvd3RoKVxuXG4gIC8vIG9ic29sZXRlXG4gIGlmIGJveCBpbiBmbGV4LXZlcnNpb25cbiAgICBzaHJpbmsgPSAxXG5cbiAgICBpZiBub25lID09IGdyb3d0aCB8fCBpbml0aWFsID09IGdyb3d0aFxuICAgICAgLy8gV2VsbCBrbm93biB2YWx1ZXNcbiAgICAgIHNocmluayA9IDAgaWYgbm9uZSA9PSBncm93dGhcbiAgICAgIGdyb3d0aCA9IDBcbiAgICBlbHNlIGlmIGlzLXdpZHRoKGdyb3d0aCkgPT0gdHJ1ZVxuICAgICAgLy8gQmFzaXMgaXMgZGVmaW5lZCBhcyB0aGUgZmlyc3QgcGFyYW1ldGVyXG4gICAgICBncm93dGggPSBhcmd1bWVudHNbMV0gfHwgMFxuICAgICAgc2hyaW5rID0gYXJndW1lbnRzWzJdIGlmIDMgPD0gbGVuZ3RoKGFyZ3VtZW50cylcbiAgICBlbHNlIGlmIGFyZ3VtZW50c1sxXSAmJiBpcy13aWR0aChhcmd1bWVudHNbMV0pID09IGZhbHNlXG4gICAgICAvLyBHcm93dGggaXMgZmlyc3QgYW5kIHNocmluayBpcyBzZWNvbmRcbiAgICAgIHNocmluayA9IGFyZ3VtZW50c1sxXVxuXG4gICAgLy8gU2luY2Ugd2UgY2FuJ3QgbWFrZSB0aGUgZGlzdGluY3Rpb24gYmV0d2VlbiBncm93aW5nIGFuZCBzaHJpbmtpbmcgaW4gdGhlIGJveCBtb2RlbCwgdGFrZVxuICAgIC8vIHRoZSBvbmUgdGhhdCBwcm92aWRlcyB0aGUgbW9zdCBmbGV4aWJpbGl0eS5cbiAgICB2ZW5kb3IoJ2JveC1mbGV4JywgbWF4KGdyb3d0aCwgc2hyaW5rKSwgaWdub3JlOiBtcylcblxuICAvLyBuZXdcbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtcyBvZmZpY2lhbClcblxuXG4vLyBjb252ZXJ0cyB0aGUganVzdGlmaWNhdGlvbiBhbGlnbm1lbnRcbi1jb252ZXJ0LWp1c3RpZnkoYWxpZ24pXG4gIGlmIGZsZXgtc3RhcnQgPT0gYWxpZ25cbiAgICByZXR1cm4gc3RhcnRcbiAgZWxzZSBpZiBmbGV4LWVuZCA9PSBhbGlnblxuICAgIHJldHVybiBlbmRcbiAgZWxzZSBpZiBzcGFjZS1hcm91bmQgPT0gYWxpZ25cbiAgICByZXR1cm4gZGlzdHJpYnV0ZVxuICBlbHNlIGlmIHNwYWNlLWJldHdlZW4gPT0gYWxpZ25cbiAgICByZXR1cm4ganVzdGlmeVxuICBlbHNlXG4gICAgcmV0dXJuIGFsaWduXG5cbi8vXG4vLyA4LiBBbGlnbm1lbnRcbi8vICAgIC0gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1mbGV4Ym94LyNhbGlnbm1lbnRcbi8vXG5qdXN0aWZ5LWNvbnRlbnQoYWxpZ24pXG4gIC8vIG9ic29sZXRlXG4gIGlmIGJveCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2JveC1wYWNrJywgLWNvbnZlcnQtanVzdGlmeShhbGlnbiksIGlnbm9yZTogbXMgb2ZmaWNpYWwpXG5cbiAgLy8gbmV3XG4gIGlmIGZsZXggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdmbGV4LXBhY2snLCAtY29udmVydC1qdXN0aWZ5KGFsaWduKSwgb25seTogbXMpXG4gICAgdmVuZG9yKCdqdXN0aWZ5LWNvbnRlbnQnLCBhbGlnbiwgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG5hbGlnbi1jb250ZW50KGFsaWduKVxuICAvLyBXQVJOOiBPYnNvbGV0ZSBzcGVjIGRvZXMgbm90IGFsbG93IGZvciBhZGp1c3RtZW50IGhlcmVcbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2ZsZXgtbGluZS1wYWNrJywgLWNvbnZlcnQtanVzdGlmeShhbGlnbiksIG9ubHk6IG1zKVxuICAgIHZlbmRvcignYWxpZ24tY29udGVudCcsIGFsaWduLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbi8vIGNvbnZlcnRzIGFsaWdubWVudCBmcm9tICdmbGV4JyB0byBub3JtYWwgdmFsdWVcbi1jb252ZXJ0LWFsaWdubWVudChhbGlnbilcbiAgaWYgZmxleC1zdGFydCA9PSBhbGlnblxuICAgIHJldHVybiBzdGFydFxuICBlbHNlIGlmIGZsZXgtZW5kID09IGFsaWduXG4gICAgcmV0dXJuIGVuZFxuICBlbHNlXG4gICAgcmV0dXJuIGFsaWduXG5cbmFsaWduLWl0ZW1zKGFsaWduKVxuICAvLyBvYnNvbGV0ZVxuICBpZiBib3ggaW4gZmxleC12ZXJzaW9uXG4gICAgdmVuZG9yKCdib3gtYWxpZ24nLCAtY29udmVydC1hbGlnbm1lbnQoYWxpZ24pLCBpZ25vcmU6IG1zIG9mZmljaWFsKVxuXG4gIC8vIG5ld1xuICBpZiBmbGV4IGluIGZsZXgtdmVyc2lvblxuICAgIHZlbmRvcignZmxleC1hbGlnbicsIC1jb252ZXJ0LWFsaWdubWVudChhbGlnbiksIG9ubHk6IG1zKVxuICAgIHZlbmRvcignYWxpZ24taXRlbXMnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuYWxpZ24tc2VsZihhbGlnbilcbiAgLy8gV0FSTjogT2Jzb2xldGUgc3BlYyBkb2VzIG5vdCBhbGxvdyBmb3Igb3ZlcnJpZGluZyBhbGlnbm1lbnQgb24gaW5kaXZpZHVhbCBpdGVtcy5cbiAgaWYgZmxleCBpbiBmbGV4LXZlcnNpb25cbiAgICB2ZW5kb3IoJ2FsaWduLXNlbGYnLCBhbGlnbiwgb25seTogd2Via2l0IG9mZmljaWFsKVxuICAgIHZlbmRvcignZmxleC1pdGVtLWFsaWduJywgLWNvbnZlcnQtYWxpZ25tZW50KGFsaWduKSwgb25seTogbXMpXG4iLCJ1c2UoJy4uL25vZGVzL3ZlbmRvci1oZWxwZXJzLmpzJylcbkBpbXBvcnQgJ2NvbmZpZydcblxuLypcbiAqIEFsaWFzIFwibm93cmFwXCIgYXMgXCJuby13cmFwXCIuXG4gKi9cblxubm8td3JhcCA9IHVucXVvdGUoJ25vd3JhcCcpXG5cbi8qXG4gKiBIZWxwZXIgdG8gZmluZCBvdXQgaWYgYSBnaXZlbiB2YWx1ZSBpcyBhIHdpZHRoXG4gKi9cblxuaXMtd2lkdGgodmFsKVxuICBpZiBhdXRvID09IHZhbFxuICAgIHJldHVybiB0cnVlXG4gIGVsc2UgaWYgdmFsICYmICd1bml0JyA9PSB0eXBlKHZhbClcbiAgICAvLyBTdHlsdXMgZG9lcyBub3Qgc2hvcnQgY2lyY3VpdCBzbyB3ZSBuZWVkIHRvIHBlcmZvcm0gdGhpcyBhcyBhIGRpc3RpbmN0XG4gICAgLy8gb3BlcmF0aW9uIHRvIHByZXZlbnQgZXJyb3JzXG4gICAgcmV0dXJuICcnICE9IHVuaXQodmFsKVxuICByZXR1cm4gZmFsc2VcblxuLypcbiAqIFZlbmRvciBzdXBwb3J0IGZvciB0aGUgZ2l2ZW4gcHJvcCAvIGFyZ3VtZW50cywgb3B0aW9uYWxseSBzcGVjaWZ5aW5nIHRoZVxuICogb25seSBwcmVmaXhlcyB0byB1dGlsaXplLCBvciB0aG9zZSB3aGljaCBzaG91bGQgYmUgaWdub3JlZC5cbiAqL1xuXG52ZW5kb3IocHJvcCwgYXJncywgb25seSA9IG51bGwsIGlnbm9yZSA9IG51bGwsIHZlbmRvci1wcm9wZXJ0eSA9IHRydWUpXG4gIG5lZWRfbm9ybWFsaXplID0gIXZlbmRvci1wcm9wZXJ0eSBvciBwcm9wIGluICgndHJhbnNpdGlvbicgJ3RyYW5zaXRpb24tcHJvcGVydHknICdib3JkZXItaW1hZ2UnICdib3JkZXItaW1hZ2Utc2xpY2UnKVxuICBmb3IgcHJlZml4IGluIHZlbmRvci1wcmVmaXhlc1xuICAgIHVubGVzcyAob25seSBhbmQgIShwcmVmaXggaW4gb25seSkpIG9yIChpZ25vcmUgYW5kIHByZWZpeCBpbiBpZ25vcmUpXG4gICAgICBpZiBvZmZpY2lhbCA9PSBwcmVmaXhcbiAgICAgICAgaWYgbmVlZF9ub3JtYWxpemVcbiAgICAgICAgICB7cHJvcH06IG5vcm1hbGl6ZShwcm9wLCgnJXMnICUgYXJncykpXG4gICAgICAgIGVsc2VcbiAgICAgICAgICB7cHJvcH06IGFyZ3NcbiAgICAgIGVsc2VcbiAgICAgICAgbmV3cHJvcCA9IHByb3BcbiAgICAgICAgbmV3cHJvcCA9ICctJyArIHByZWZpeCArICctJyArIHByb3AgaWYgdmVuZG9yLXByb3BlcnR5XG5cbiAgICAgICAgaWYgbmVlZF9ub3JtYWxpemVcbiAgICAgICAgICB7bmV3cHJvcH06IG5vcm1hbGl6ZShwcm9wLCgnJXMnICUgYXJncykscHJlZml4KVxuICAgICAgICBlbHNlXG4gICAgICAgICAge25ld3Byb3B9OiBhcmdzXG4vKlxuICogVmVuZG9yaXplIHRoZSBnaXZlbiB2YWx1ZS5cbiAqL1xuXG52ZW5kb3ItdmFsdWUoYXJnLCBvbmx5ID0gbnVsbCwgaWdub3JlID0gbnVsbClcbiAgcHJvcCA9IGN1cnJlbnQtcHJvcGVydHlbMF1cbiAgZm9yIHByZWZpeCBpbiB2ZW5kb3ItcHJlZml4ZXNcbiAgICB1bmxlc3MgKG9ubHkgYW5kICEocHJlZml4IGluIG9ubHkpKSBvciAoaWdub3JlIGFuZCBwcmVmaXggaW4gaWdub3JlKSBvciBvZmZpY2lhbCA9PSBwcmVmaXhcbiAgICAgIGFkZC1wcm9wZXJ0eShwcm9wLCAnLSVzLSVzJyAlIChwcmVmaXggYXJnKSlcbiAgYXJnXG5cbi8qXG4gKiBWZW5kb3IgXCJib3gtc2hhZG93XCIgc3VwcG9ydC5cbiAqL1xuXG5ib3gtc2hhZG93KClcbiAgdmVuZG9yKCdib3gtc2hhZG93JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJ1c2VyLXNlbGVjdFwiIHN1cHBvcnQuXG4gKi9cblxudXNlci1zZWxlY3QoKVxuICB2ZW5kb3IoJ3VzZXItc2VsZWN0JywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG1zIG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiY29sdW1uLWNvdW50XCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4tY291bnQoKVxuICB2ZW5kb3IoJ2NvbHVtbi1jb3VudCcsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi1nYXBcIiBzdXBwb3J0LlxuICovXG5cbmNvbHVtbi1nYXAoKVxuICB2ZW5kb3IoJ2NvbHVtbi1nYXAnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJjb2x1bW4tcnVsZVwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLXJ1bGUoKVxuICB2ZW5kb3IoJ2NvbHVtbi1ydWxlJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiY29sdW1uLXJ1bGUtY29sb3JcIiBzdXBwb3J0LlxuICovXG5cbmNvbHVtbi1ydWxlLWNvbG9yKClcbiAgdmVuZG9yKCdjb2x1bW4tcnVsZS1jb2xvcicsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi1ydWxlLXdpZHRoXCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4tcnVsZS13aWR0aCgpXG4gIHZlbmRvcignY29sdW1uLXJ1bGUtd2lkdGgnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJjb2x1bW4tcnVsZS1zdHlsZVwiIHN1cHBvcnQuXG4gKi9cblxuY29sdW1uLXJ1bGUtc3R5bGUoKVxuICB2ZW5kb3IoJ2NvbHVtbi1ydWxlLXN0eWxlJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiY29sdW1uLXdpZHRoXCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4td2lkdGgoKVxuICB2ZW5kb3IoJ2NvbHVtbi13aWR0aCcsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi1zcGFuXCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4tc3BhbigpXG4gIHZlbmRvcignY29sdW1uLXNwYW4nLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImNvbHVtbi1maWxsXCIgc3VwcG9ydC5cbiAqL1xuXG5jb2x1bW4tZmlsbCgpXG4gIHZlbmRvcignY29sdW1uLWZpbGwnLCBhcmd1bWVudHMsIG9ubHk6IG1veilcblxuLypcbiAqIExlZ2FjeSBzeW50YXggc3VwcG9ydCBmb3IgYmFja2dyb3VuZC1jbGlwIGFuZCBiYWNrZ3JvdW5kLW9yaWdpblxuICovXG5cbmxlZ2FjeS1iZy12YWx1ZXMocHJvcGVydHksIGFyZ3MpXG4gIGxlZ2FjeV9hcmdzID0gKClcbiAgaW1wb3J0YW5jZSA9IHVucXVvdGUoJycpXG4gIGZvciBzdWJhcmdzIGluIGFyZ3NcbiAgICBmb3IgYXJnIGluIHN1YmFyZ3NcbiAgICAgIGlmIGFyZyBpbiAoYm9yZGVyLWJveCBwYWRkaW5nLWJveCBjb250ZW50LWJveClcbiAgICAgICAgYXJnID0gdW5xdW90ZSgnYm9yZGVyJykgIGlmIGFyZyA9PSBib3JkZXItYm94XG4gICAgICAgIGFyZyA9IHVucXVvdGUoJ3BhZGRpbmcnKSBpZiBhcmcgPT0gcGFkZGluZy1ib3hcbiAgICAgICAgYXJnID0gdW5xdW90ZSgnY29udGVudCcpIGlmIGFyZyA9PSBjb250ZW50LWJveFxuICAgICAgaWYgYXJnICE9ICchaW1wb3J0YW50J1xuICAgICAgICBwdXNoKGxlZ2FjeV9hcmdzLGFyZylcbiAgICAgIGVsc2VcbiAgICAgICAgaW1wb3J0YW5jZSA9ICFpbXBvcnRhbnRcbiAgdmVuZG9yKHByb3BlcnR5LCB1bnF1b3RlKGpvaW4oJywgJyxsZWdhY3lfYXJncykpIGltcG9ydGFuY2UsIG9ubHk6IG1veiB3ZWJraXQpXG5cbi8qXG4gKiBWZW5kb3IgXCJiYWNrZ3JvdW5kLWNsaXBcIiBzdXBwb3J0LlxuICovXG5cbmJhY2tncm91bmQtY2xpcCgpXG4gIGlmIGFyZ3VtZW50c1swXSA9PSB0ZXh0XG4gICAgdmVuZG9yKCdiYWNrZ3JvdW5kLWNsaXAnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdClcbiAgZWxzZVxuICAgIGxlZ2FjeS1iZy12YWx1ZXMoJ2JhY2tncm91bmQtY2xpcCcsIGFyZ3VtZW50cylcbiAgICBiYWNrZ3JvdW5kLWNsaXA6IGFyZ3VtZW50c1xuXG4vKlxuICogVmVuZG9yIFwiYmFja2dyb3VuZC1vcmlnaW5cIiBzdXBwb3J0LlxuICovXG5cbmJhY2tncm91bmQtb3JpZ2luKClcbiAgbGVnYWN5LWJnLXZhbHVlcygnYmFja2dyb3VuZC1vcmlnaW4nLCBhcmd1bWVudHMpXG4gIGJhY2tncm91bmQtb3JpZ2luOiBhcmd1bWVudHNcblxuLypcbiAqIFZlbmRvciBcImJhY2tncm91bmQtc2l6ZVwiIHN1cHBvcnQuXG4gKi9cblxuYmFja2dyb3VuZC1zaXplKClcbiAgdmVuZG9yKCdiYWNrZ3JvdW5kLXNpemUnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0cmFuc2Zvcm1cIiBzdXBwb3J0LlxuICovXG5cbnRyYW5zZm9ybSgpXG4gIHZlbmRvcigndHJhbnNmb3JtJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwidHJhbnNmb3JtLW9yaWdpblwiIHN1cHBvcnQuXG4gKi9cbnRyYW5zZm9ybS1vcmlnaW4oKVxuICAgIHZlbmRvcigndHJhbnNmb3JtLW9yaWdpbicsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcInRyYW5zZm9ybS1zdHlsZVwiIHN1cHBvcnQuXG4gKi9cblxudHJhbnNmb3JtLXN0eWxlKClcbiAgdmVuZG9yKCd0cmFuc2Zvcm0tc3R5bGUnLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJib3JkZXItaW1hZ2VcIiBzdXBwb3J0LlxuICovXG5cbmJvcmRlci1pbWFnZSgpXG4gIHZlbmRvcignYm9yZGVyLWltYWdlJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG8gb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0cmFuc2l0aW9uXCIgc3VwcG9ydC5cbiAqL1xuXG50cmFuc2l0aW9uKClcbiAgdmVuZG9yKCd0cmFuc2l0aW9uJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwidHJhbnNpdGlvbi1wcm9wZXJ0eVwiIHN1cHBvcnQuXG4gKi9cblxudHJhbnNpdGlvbi1wcm9wZXJ0eSgpXG4gIHZlbmRvcigndHJhbnNpdGlvbi1wcm9wZXJ0eScsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcInRyYW5zaXRpb24tZHVyYXRpb25cIiBzdXBwb3J0LlxuICovXG5cbnRyYW5zaXRpb24tZHVyYXRpb24oKVxuICB2ZW5kb3IoJ3RyYW5zaXRpb24tZHVyYXRpb24nLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJ0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvblwiIHN1cHBvcnQuXG4gKi9cblxudHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24oKVxuICB2ZW5kb3IoJ3RyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwidHJhbnNpdGlvbi1kZWxheVwiIHN1cHBvcnQuXG4gKi9cblxudHJhbnNpdGlvbi1kZWxheSgpXG4gIHZlbmRvcigndHJhbnNpdGlvbi1kZWxheScsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcImJhY2tmYWNlLXZpc2liaWxpdHlcIiBzdXBwb3J0LlxuICovXG5cbmJhY2tmYWNlLXZpc2liaWxpdHkoKVxuICB2ZW5kb3IoJ2JhY2tmYWNlLXZpc2liaWxpdHknLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJwZXJzcGVjdGl2ZVwiIHN1cHBvcnQuXG4gKi9cblxucGVyc3BlY3RpdmUoKVxuICBpZiBtaXhpblxuICAgIHZlbmRvcigncGVyc3BlY3RpdmUnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG4gIGVsc2VcbiAgICAncGVyc3BlY3RpdmUoJXMpJyAlIGFyZ3VtZW50c1xuXG4vKlxuICogVmVuZG9yIFwicGVyc3BlY3RpdmUtb3JpZ2luXCIgc3VwcG9ydC5cbiAqL1xuXG5wZXJzcGVjdGl2ZS1vcmlnaW4oKVxuICB2ZW5kb3IoJ3BlcnNwZWN0aXZlLW9yaWdpbicsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBtcyBvZmZpY2lhbClcblxuLypcbiAqIE9wYWNpdHkgd2l0aCBjb25kaXRpb25hbCBJRSBzdXBwb3J0LlxuICovXG5cbm9wYWNpdHkobiwgYXJncy4uLilcbiAgb3BhY2l0eTogbiBhcmdzXG4gIGlmIHN1cHBvcnQtZm9yLWllXG4gICAgaWYgbiA9PSBpbmhlcml0IG9yIG4gPT0gaW5pdGlhbFxuICAgICAgLW1zLWZpbHRlcjogbiBhcmdzXG4gICAgICBmaWx0ZXI6IG4gYXJnc1xuICAgIGVsc2VcbiAgICAgIHZhbCA9IHJvdW5kKG4gKiAxMDApXG4gICAgICBpZiB2YWwgPT0gMTAwXG4gICAgICAgIC1tcy1maWx0ZXI6IG5vbmVcbiAgICAgICAgZmlsdGVyOiBub25lXG4gICAgICBlbHNlXG4gICAgICAgIC1tcy1maWx0ZXI6ICdcInByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5BbHBoYShPcGFjaXR5PSVzKVwiJyAlIHZhbCBhcmdzXG4gICAgICAgIGZpbHRlcjogJ2FscGhhKG9wYWNpdHk9JXMpJyAlIHZhbCBhcmdzXG5cbi8qXG4gKiBWZW5kb3IgXCJ0ZXh0LXNpemUtYWRqdXN0XCJcbiAqL1xuXG50ZXh0LXNpemUtYWRqdXN0KClcbiAgdmVuZG9yKCd0ZXh0LXNpemUtYWRqdXN0JywgYXJndW1lbnRzKVxuXG4vKlxuICogQWxpYXMgdGhlIFwid2hpdGUtc3BhY2VcIiBwcm9wZXJ0eS5cbiAqL1xuXG53aGl0ZXNwYWNlKClcbiAgd2hpdGUtc3BhY2U6IGFyZ3VtZW50c1xuXG4vKlxuICogVmVuZG9yIFwiYm94LXNpemluZ1wiIHN1cHBvcnQuXG4gKi9cblxuYm94LXNpemluZygpXG4gIHZlbmRvcignYm94LXNpemluZycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImJveC1vcmllbnRcIiBzdXBwb3J0LlxuICovXG5cbmJveC1vcmllbnQoKVxuICB2ZW5kb3IoJ2JveC1vcmllbnQnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJib3gtZmxleC1ncm91cFwiIHN1cHBvcnQuXG4gKi9cblxuYm94LWZsZXgtZ3JvdXAoKVxuICB2ZW5kb3IoJ2JveC1mbGV4LWdyb3VwJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiYm94LW9yZGluYWwtZ3JvdXBcIiBzdXBwb3J0LlxuICovXG5cbmJveC1vcmRpbmFsLWdyb3VwKClcbiAgdmVuZG9yKCdib3gtb3JkaW5hbC1ncm91cCcsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBtcyBvZmZpY2lhbClcblxuXG4vKlxuICogVmVuZG9yIFwiYm94LWFsaWduXCIgc3VwcG9ydC5cbiAqL1xuXG5ib3gtYWxpZ24oKVxuICB2ZW5kb3IoJ2JveC1hbGlnbicsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBtcyBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcImJveC1wYWNrXCIgc3VwcG9ydC5cbiAqL1xuXG5ib3gtcGFjaygpXG4gIHZlbmRvcignYm94LXBhY2snLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdCBtb3ogbXMgb2ZmaWNpYWwpXG5cbi8qXG4gKiBWZW5kb3IgXCJib3gtZGlyZWN0aW9uXCIgc3VwcG9ydC5cbiAqL1xuXG5ib3gtZGlyZWN0aW9uKClcbiAgdmVuZG9yKCdib3gtZGlyZWN0aW9uJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG1zIG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiYW5pbWF0aW9uXCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24oKVxuICB2ZW5kb3IoJ2FuaW1hdGlvbicsIGFyZ3VtZW50cylcblxuXG4vKlxuICogVmVuZG9yIFwiYW5pbWF0aW9uLW5hbWVcIiBzdXBwb3J0LlxuICovXG5cbmFuaW1hdGlvbi1uYW1lKClcbiAgdmVuZG9yKCdhbmltYXRpb24tbmFtZScsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvbi1kdXJhdGlvblwiIHN1cHBvcnQuXG4gKi9cblxuYW5pbWF0aW9uLWR1cmF0aW9uKClcbiAgdmVuZG9yKCdhbmltYXRpb24tZHVyYXRpb24nLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJhbmltYXRpb24tZGVsYXlcIiBzdXBwb3J0LlxuICovXG5cbmFuaW1hdGlvbi1kZWxheSgpXG4gIHZlbmRvcignYW5pbWF0aW9uLWRlbGF5JywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiYW5pbWF0aW9uLWRpcmVjdGlvblwiIHN1cHBvcnQuXG4gKi9cblxuYW5pbWF0aW9uLWRpcmVjdGlvbigpXG4gIHZlbmRvcignYW5pbWF0aW9uLWRpcmVjdGlvbicsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvbi1pdGVyYXRpb24tY291bnRcIiBzdXBwb3J0LlxuICovXG5cbmFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQoKVxuICB2ZW5kb3IoJ2FuaW1hdGlvbi1pdGVyYXRpb24tY291bnQnLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uXCIgc3VwcG9ydC5cbiAqL1xuXG5hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uKClcbiAgdmVuZG9yKCdhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uJywgYXJndW1lbnRzKVxuXG4vKlxuICogVmVuZG9yIFwiYW5pbWF0aW9uLXBsYXktc3RhdGVcIiBzdXBwb3J0LlxuICovXG5cbmFuaW1hdGlvbi1wbGF5LXN0YXRlKClcbiAgdmVuZG9yKCdhbmltYXRpb24tcGxheS1zdGF0ZScsIGFyZ3VtZW50cylcblxuLypcbiAqIFZlbmRvciBcImFuaW1hdGlvbi1maWxsLW1vZGVcIiBzdXBwb3J0LlxuICovXG5cbmFuaW1hdGlvbi1maWxsLW1vZGUoKVxuICB2ZW5kb3IoJ2FuaW1hdGlvbi1maWxsLW1vZGUnLCBhcmd1bWVudHMpXG5cbi8qXG4gKiBWZW5kb3IgXCJoeXBoZW5zXCIgc3VwcG9ydC5cbiAqL1xuXG5oeXBoZW5zKClcbiAgdmVuZG9yKCdoeXBoZW5zJywgYXJndW1lbnRzLCBvbmx5OiB3ZWJraXQgbW96IG1zIG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwiYXBwZWFyYW5jZVwiIHN1cHBvcnQuXG4gKi9cblxuYXBwZWFyYW5jZSgpXG4gIHZlbmRvcignYXBwZWFyYW5jZScsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG1veiBvZmZpY2lhbClcblxuLypcbiAqIFZlbmRvciBcInRhYi1zaXplXCIgc3VwcG9ydC5cbiAqL1xuXG50YWItc2l6ZSgpXG4gIHZlbmRvcigndGFiLXNpemUnLCBhcmd1bWVudHMsIG9ubHk6IG1veiBvIG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwib3ZlcmZsb3ctc2Nyb2xsaW5nXCIgc3VwcG9ydC5cbiAqL1xuXG5vdmVyZmxvdy1zY3JvbGxpbmcoKVxuICB2ZW5kb3IoJ292ZXJmbG93LXNjcm9sbGluZycsIGFyZ3VtZW50cywgb25seTogd2Via2l0IG9mZmljaWFsKVxuXG4vKlxuICogVmVuZG9yIFwidGV4dC1vdmVyZmxvd1wiIHN1cHBvcnQsICwgLW8tIGZvciBvcGVyYSA5LiogLSAxMC4qXG4gKi9cblxudGV4dC1vdmVyZmxvdygpXG4gIHZlbmRvcigndGV4dC1vdmVyZmxvdycsIGFyZ3VtZW50cywgb25seTogb2ZmaWNpYWwgbylcblxuLypcbiAqIFZlbmRvciBcInRleHQtc2l6ZS1hZGp1c3RcIiBzdXBwb3J0LlxuICovXG50ZXh0LXNpemUtYWRqdXN0KClcbiAgdmVuZG9yKCd0ZXh0LXNpemUtYWRqdXN0JywgYXJndW1lbnRzLCBvbmx5OiBvZmZpY2lhbCB3ZWJraXQgbXMpXG5cbi8qXG4gKiBWZW5kb3IgXCJmb250LXNtb290aGluZ1wiIHN1cHBvcnQsIHdlYmtpdCBvbmx5LlxuICovXG5mb250LXNtb290aGluZygpXG4gIHZlbmRvcignZm9udC1zbW9vdGhpbmcnLCBhcmd1bWVudHMsIG9ubHk6IHdlYmtpdClcblxuLypcbiAqIEhlbHBlciBmb3IgYm9yZGVyLXJhZGl1cygpLlxuICovXG5cbi1hcHBseS1ib3JkZXItcmFkaXVzKHBvcywgaW1wb3J0YW5jZSlcbiAgaWYgbGVuZ3RoKHBvcykgPT0gM1xuICAgIC8vIGJvcmRlci1yYWRpdXM6IDx0b3AgfCBidXR0b20+IDxsZWZ0IHwgcmlnaHQ+IDxuPlxuICAgIHkgPSBwb3NbMF1cbiAgICB4ID0gcG9zWzFdXG4gICAgLy8gV2UgZG9uJ3QgdXNlIG1veiBmb3Igc2ltcGxlIGJvZGVyLXJhZGl1cyBhbnltb3JlXG4gICAgLy8gdmVuZG9yKCdib3JkZXItcmFkaXVzLSVzJXMnICUgcG9zLCBwb3NbMl0sIG9ubHk6IG1veilcbiAgICB2ZW5kb3IoJ2JvcmRlci0lcy0lcy1yYWRpdXMnICUgcG9zLCBwb3NbMl0gaW1wb3J0YW5jZSwgb25seTogd2Via2l0IG9mZmljaWFsKVxuICBlbHNlIGlmIHBvc1swXSBpbiAodG9wIGJvdHRvbSlcbiAgICAvLyBib3JkZXItcmFkaXVzOiA8dG9wIHwgYm90dG9tPiA8bj5cbiAgICAtYXBwbHktYm9yZGVyLXJhZGl1cyhwb3NbMF0gbGVmdCBwb3NbMV0sIGltcG9ydGFuY2UpXG4gICAgLWFwcGx5LWJvcmRlci1yYWRpdXMocG9zWzBdIHJpZ2h0IHBvc1sxXSwgaW1wb3J0YW5jZSlcbiAgZWxzZSBpZiBwb3NbMF0gaW4gKGxlZnQgcmlnaHQpXG4gICAgLy8gYm9yZGVyLXJhZGl1czogPGxlZnQgfCByaWdodD4gPG4+XG4gICAgdW5zaGlmdChwb3MsIHRvcCk7XG4gICAgLWFwcGx5LWJvcmRlci1yYWRpdXMocG9zLCBpbXBvcnRhbmNlKVxuICAgIHBvc1swXSA9IGJvdHRvbVxuICAgIC1hcHBseS1ib3JkZXItcmFkaXVzKHBvcywgaW1wb3J0YW5jZSlcblxuLypcbiAqIGJvcmRlci1yYWRpdXMgc3VwcG9ydGluZyB2ZW5kb3IgcHJlZml4ZXMgYW5kXG4gKiBhdWdtZW50ZWQgYmVoYXZpb3IuXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgYm9yZGVyLXJhZGl1czogMnB4IDVweFxuICogICAgYm9yZGVyLXJhZGl1czogdG9wIDVweCBib3R0b20gMTBweFxuICogICAgYm9yZGVyLXJhZGl1czogbGVmdCA1cHhcbiAqICAgIGJvcmRlci1yYWRpdXM6IHRvcCBsZWZ0IDVweFxuICogICAgYm9yZGVyLXJhZGl1czogdG9wIGxlZnQgMTBweCBib3R0b20gcmlnaHQgNXB4XG4gKiAgICBib3JkZXItcmFkaXVzOiB0b3AgbGVmdCAxMHB4LCBib3R0b20gcmlnaHQgNXB4XG4gKlxuICovXG5cbmJvcmRlci1yYWRpdXMoKVxuICBwb3MgPSAoKVxuICBhdWdtZW50ZWQgPSBmYWxzZVxuICBpbXBvcnRhbmNlID0gYXJndW1lbnRzW2xlbmd0aChhcmd1bWVudHMpIC0gMV0gPT0gIWltcG9ydGFudCA/ICFpbXBvcnRhbnQgOiB1bnF1b3RlKCcnKVxuXG4gIGZvciBhcmdzIGluIGFyZ3VtZW50c1xuICAgIGZvciBhcmcgaW4gYXJnc1xuICAgICAgaWYgYXJnIGlzIGEgJ2lkZW50J1xuICAgICAgICBhcHBlbmQocG9zLCBhcmcpXG4gICAgICAgIGF1Z21lbnRlZCA9IHRydWVcbiAgICAgIGVsc2VcbiAgICAgICAgYXBwZW5kKHBvcywgYXJnKVxuICAgICAgICBpZiBhdWdtZW50ZWRcbiAgICAgICAgICAtYXBwbHktYm9yZGVyLXJhZGl1cyhwb3MsIGltcG9ydGFuY2UpXG4gICAgICAgICAgcG9zID0gKClcbiAgdmVuZG9yKCdib3JkZXItcmFkaXVzJywgcG9zLCBvbmx5OiB3ZWJraXQgb2ZmaWNpYWwpIHVubGVzcyBhdWdtZW50ZWRcblxuLyoqXG4gKiBWZW5kb3IgaW5wdXQtcGxhY2Vob2xkZXIvcGxhY2Vob2xkZXIgc3VwcG9ydC5cbiAqXG4gKiBFeGFtcGxlczpcbiAqICAgIC8vIERlZmF1bHQgc3ludGF4XG4gKiAgICBib2R5XG4gKiAgICAgIHBsYWNlaG9sZGVyKGNvbG9yICMzMzMsIGZvbnQtd2VpZ2h0IG5vcm1hbClcbiAqXG4gKiAgICAvLyBUaGUgY29tbWEgaXMgaW1wb3J0YW50XG4gKiAgICAucGxhY2Vob2xkZXItcmVkXG4gKiAgICAgIHBsYWNlaG9sZGVyKGNvbG9yIHJlZCwpXG4gKlxuICogICAgLy8gV2UgY2FuIHBhc3MgYSBmdW5jdGlvblxuICogICAgZ3JlZW4tcGxhY2Vob2xkZXIoKVxuICogICAgICBjb2xvciBncmVlblxuICogICAgLnBsYWNlaG9sZGVyLWdyZWVuXG4gKiAgICAgIHBsYWNlaG9sZGVyKGdyZWVuLXBsYWNlaG9sZGVyKVxuICpcbiAqICAgIC8vIFdlIGNhbiBwYXNzIGEgaGFzaFxuICogICAgdGV4dGFyZWFcbiAqICAgICAgcGxhY2Vob2xkZXIoKGZvbnQtc3R5bGUgaXRhbGljKSAoZm9udC13ZWlnaHQgYm9sZCkgKHBhZGRpbmcgJzRweCAxMHB4JykpXG4gKi9cbnBsYWNlaG9sZGVyKClcbiAgZm9yIHYgaW4gJzotd2Via2l0LWlucHV0JyAnLW1veicgJzotbW96JyAnLW1zLWlucHV0J1xuICAgICY6e3Z9LXBsYWNlaG9sZGVyXG4gICAgICBmb3IgcGFpciBpbiBhcmd1bWVudHNcbiAgICAgICAgaWYgdHlwZW9mKHBhaXIpID09ICdmdW5jdGlvbidcbiAgICAgICAgICBwYWlyKClcbiAgICAgICAgZWxzZSBpZiBwYWlyIGlzIG5vdCBudWxsICYmIHBhaXJbMF0gaXMgbm90IG51bGxcbiAgICAgICAgICB7cGFpclswXX06IHR5cGUocGFpclsxXSkgPT0gJ3N0cmluZycgPyBzKHBhaXJbMV0pIDogcGFpclsxXVxuaW5wdXQtcGxhY2Vob2xkZXIgPSBwbGFjZWhvbGRlclxuXG4vKlxuICogVmVuZG9yIGJhY2tncm91bmQgc3VwcG9ydCAoZ3JhZGllbnRzKS5cbiAqL1xuXG5iYWNrZ3JvdW5kKClcbiAgaWYgbWF0Y2goJy1ncmFkaWVudFxcKCcsICcnK2FyZ3VtZW50cylcbiAgICB2ZW5kb3IoJ2JhY2tncm91bmQnLCBhcmd1bWVudHMsIHZlbmRvci1wcm9wZXJ0eTogZmFsc2UpXG4gIGVsc2VcbiAgICBiYWNrZ3JvdW5kIGFyZ3VtZW50c1xuXG5iYWNrZ3JvdW5kLWltYWdlKClcbiAgaWYgbWF0Y2goJy1ncmFkaWVudFxcKCcsICcnK2FyZ3VtZW50cylcbiAgICB2ZW5kb3IoJ2JhY2tncm91bmQtaW1hZ2UnLCBhcmd1bWVudHMsIHZlbmRvci1wcm9wZXJ0eTogZmFsc2UpXG4gIGVsc2VcbiAgICBiYWNrZ3JvdW5kLWltYWdlIGFyZ3VtZW50c1xuXG5jdXJzb3IoKVxuICBpZiBtYXRjaCgnLWdyYWRpZW50XFwoJywgJycrYXJndW1lbnRzKVxuICAgIHZlbmRvcignY3Vyc29yJywgYXJndW1lbnRzLCB2ZW5kb3ItcHJvcGVydHk6IGZhbHNlKVxuICBlbHNlXG4gICAgY3Vyc29yIGFyZ3VtZW50c1xuXG5saXN0LXN0eWxlKClcbiAgaWYgbWF0Y2goJy1ncmFkaWVudFxcKCcsICcnK2FyZ3VtZW50cylcbiAgICB2ZW5kb3IoJ2xpc3Qtc3R5bGUnLCBhcmd1bWVudHMsIHZlbmRvci1wcm9wZXJ0eTogZmFsc2UpXG4gIGVsc2VcbiAgICBsaXN0LXN0eWxlIGFyZ3VtZW50c1xuXG5saXN0LXN0eWxlLWltYWdlKClcbiAgaWYgbWF0Y2goJy1ncmFkaWVudFxcKCcsICcnK2FyZ3VtZW50cylcbiAgICB2ZW5kb3IoJ2xpc3Qtc3R5bGUtaW1hZ2UnLCBhcmd1bWVudHMsIHZlbmRvci1wcm9wZXJ0eTogZmFsc2UpXG4gIGVsc2VcbiAgICBsaXN0LXN0eWxlLWltYWdlIGFyZ3VtZW50c1xuIiwiLy9cbi8vIFR5cG9ncmFwaHkgc3R5bGVzXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBGb250IGluY2x1c2lvbnNcblxuQGZvbnQtZmFjZVxuICAgIGZvbnQtZmFtaWx5ICdMaXZvcnknXG4gICAgc3JjIHVybCgnLi4vZm9udHMvMkI4QTVGXzBfMC5lb3QnKVxuICAgIHNyYyB1cmwoJy4uL2ZvbnRzLzJCOEE1Rl8wXzAuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCcuLi9mb250cy8yQjhBNUZfMF8wLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCcuLi9mb250cy8yQjhBNUZfMF8wLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKVxuICAgIGZvbnQtd2VpZ2h0IG5vcm1hbFxuXG5AZm9udC1mYWNlXG4gICAgZm9udC1mYW1pbHkgJ01vbnRlQ2FybG8nXG4gICAgc3JjIHVybCgnLi4vZm9udHMvMkI4QTVGXzFfMC5lb3QnKVxuICAgIHNyYyB1cmwoJy4uL2ZvbnRzLzJCOEE1Rl8xXzAuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgdXJsKCcuLi9mb250cy8yQjhBNUZfMV8wLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgdXJsKCcuLi9mb250cy8yQjhBNUZfMV8wLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKVxuICAgIGZvbnQtd2VpZ2h0IG5vcm1hbFxuXG5AZm9udC1mYWNlXG4gICAgZm9udC1mYW1pbHkgJ1NlcmlmaXFvJ1xuICAgIHNyYyB1cmwoJy4uL2ZvbnRzLzJCOEE1Rl8yXzAuZW90JylcbiAgICBzcmMgdXJsKCcuLi9mb250cy8yQjhBNUZfMl8wLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgnLi4vZm9udHMvMkI4QTVGXzJfMC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgIHVybCgnLi4vZm9udHMvMkI4QTVGXzJfMC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJylcbiAgICBmb250LXdlaWdodCBub3JtYWxcblxuQGZvbnQtZmFjZVxuICAgIGZvbnQtZmFtaWx5ICdGb250QXdlc29tZSdcbiAgICBzcmMgdXJsKCcuLi9mb250cy9mb250LWF3ZXNvbWUvZm9udGF3ZXNvbWUtd2ViZm9udC5lb3QnKVxuICAgIHNyYyB1cmwoJy4uL2ZvbnRzL2ZvbnQtYXdlc29tZS9mb250YXdlc29tZS13ZWJmb250LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXG4gICAgICAgIHVybCgnLi4vZm9udHMvZm9udC1hd2Vzb21lL2ZvbnRhd2Vzb21lLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpLFxuICAgICAgICB1cmwoJy4uL2ZvbnRzL2ZvbnQtYXdlc29tZS9mb250YXdlc29tZS13ZWJmb250LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKVxuICAgIGZvbnQtd2VpZ2h0IG5vcm1hbFxuXG5cbi8vIFRleHQgZWxlbWVudCBzdHlsZXNcblxuaDFcbiAgICBmb250LWZhbWlseSAkc2VyaWZpcW9cbiAgICBmb250LXNpemUgNDRweFxuICAgIGZvbnQtd2VpZ2h0IGxpZ2h0ZXJcblxuaDJcbiAgICBmb250LWZhbWlseSAkbW9udGVDYXJsb1xuICAgIGZvbnQtc2l6ZSAzMHB4XG4gICAgY29sb3IgJGdvbGRlbnJvZFxuICAgIGZvbnQtd2VpZ2h0IGxpZ2h0ZXJcblxuaDNcbiAgICBmb250LWZhbWlseSAkc2VyaWZpcW9cbiAgICBmb250LXNpemUgMjJweFxuICAgIGxpbmUtaGVpZ2h0IDM0cHhcbiAgICBmb250LXdlaWdodCBsaWdodGVyXG4gICAgY29sb3IgJGdvbGRlbnJvZFxuICAgIG1hcmdpbiAwIDAgOHB4XG5cbmg0XG4gICAgZm9udC1mYW1pbHkgJGxpdm9yeVxuICAgIGZvbnQtc2l6ZSAxMnB4XG4gICAgdGV4dC10cmFuc2Zvcm0gdXBwZXJjYXNlXG4gICAgZm9udC13ZWlnaHQgbm9ybWFsXG4gICAgY29sb3IgJGNyYW5iZXJyeVxuICAgIG1hcmdpbi1ib3R0b20gMTVweFxuXG5wXG4gICAgZm9udC1zaXplIDE1cHhcbiAgICBsaW5lLWhlaWdodCAyMXB4XG4gICAgbWFyZ2luIDBcblxuYSxcbmE6bGluayxcbmE6dmlzaXRlZFxuICAgIGNvbG9yICRjcmFuYmVycnktbGlnaHRcbiAgICB0ZXh0LWRlY29yYXRpb24gbm9uZVxuICAgIHRyYW5zaXRpb24gY29sb3IgLjJzXG5cbiAgICAuZ2xvYmFsLW5hdiAmXG4gICAgICAgIGNvbG9yIHdoaXRlXG5cbiAgICAuZ2xvYmFsLW5hdiAmOmhvdmVyXG4gICAgICAgIGNvbG9yICRjcmVhbVxuXG5hOmhvdmVyXG4gICAgY29sb3IgJGNyYW5iZXJyeVxuICAgIHRyYW5zaXRpb24gY29sb3IgLjJzXG5cbi5wYWdlLXRpdGxlXG4gICAgdGV4dC1hbGlnbiBjZW50ZXJcbiAgICBtYXJnaW4gNDBweCAwIDMwcHhcblxuLnBob3RvLWNyZWRpdHNcbiAgICBmb250LXNpemUgMTJyZW1cbiAgICBsaW5lLWhlaWdodCAxNnJlbVxuICAgIGNvbG9yICRtaXN0LWRhcmtcblxuLnNtYWxsXG4gICAgZm9udC1zaXplIDEycHhcbiAgICBsaW5lLWhlaWdodCAxNnB4XG5cblxuK2JlbG93KDUwMHB4KVxuICAgIGgxXG4gICAgICAgIGZvbnQtc2l6ZSAzNHB4XG4gICAgXG4gICAgaDNcbiAgICAgICAgZm9udC1zaXplIDIycHhcbiAgICAgICAgbGluZS1oZWlnaHQgMjhweCIsImJhc2UtZm9udC1zaXplID89IDE2cHhcblxucnVwdHVyZSA9IHtcbiAgbW9iaWxlLWN1dG9mZjogNDAwcHhcbiAgZGVza3RvcC1jdXRvZmY6IDEwNTBweFxuICBlbmFibGUtZW0tYnJlYWtwb2ludHM6IGZhbHNlXG4gIGJhc2UtZm9udC1zaXplOiBiYXNlLWZvbnQtc2l6ZVxuICBhbnRpLW92ZXJsYXA6IGZhbHNlXG4gIGRlbnNpdHktcXVlcmllczogJ2RwcHgnICd3ZWJraXQnICdtb3onICdkcGknXG4gIHJldGluYS1kZW5zaXR5OiAxLjVcbiAgdXNlLWRldmljZS13aWR0aDogZmFsc2Vcbn1cbnJ1cHR1cmUuc2NhbGUgPSAwIChydXB0dXJlLm1vYmlsZS1jdXRvZmYpIDYwMHB4IDgwMHB4IChydXB0dXJlLmRlc2t0b3AtY3V0b2ZmKVxucnVwdHVyZS5zY2FsZS1uYW1lcyA9ICd4cycgJ3MnICdtJyAnbCcgJ3hsJ1xuXG4tZ2V0LXNjYWxlLW51bWJlcihzY2FsZS1uYW1lKVxuICBmb3IgbGlzdC1pdGVtLCBpIGluIHJ1cHR1cmUuc2NhbGUtbmFtZXNcbiAgICBpZiBsaXN0LWl0ZW0gaXMgc2NhbGUtbmFtZVxuICAgICAgcmV0dXJuIGkgKyAxXG4gIHJldHVybiBmYWxzZVxuXG4tY29udmVydC10byh0by11bml0LCB2YWx1ZSwgY29udGV4dCA9IHJ1cHR1cmUuYmFzZS1mb250LXNpemUpXG4gIGZyb20tdW5pdCA9IHVuaXQodmFsdWUpXG4gIHJldHVybiB2YWx1ZSBpZiB0by11bml0IGlzIGZyb20tdW5pdFxuICBpZiB0by11bml0IGluICgnZW0nICdyZW0nKVxuICAgIHJldHVybiB2YWx1ZSBpZiBmcm9tLXVuaXQgaW4gKCdlbScgJ3JlbScpXG4gICAgcmV0dXJuIHVuaXQoKHZhbHVlIC8gY29udGV4dCksIHRvLXVuaXQpXG4gIGlmIHRvLXVuaXQgaXMgJ3B4J1xuICAgIHJldHVybiB1bml0KCh2YWx1ZSAqIGNvbnRleHQpLCAncHgnKVxuXG4tb24tc2NhbGUobilcbiAgcmV0dXJuIHVuaXQobikgaXMgJydcblxuLWxhcmdlci10aGFuLXNjYWxlKG4pXG4gIHJldHVybiAobiA+IChsZW5ndGgocnVwdHVyZS5zY2FsZSkgLSAxKSkgYW5kIC1vbi1zY2FsZShuKVxuXG4taXMtemVybyhuKVxuICByZXR1cm4gbiBpcyAwXG5cbi1vdmVybGFwLXNoaWZ0KGFudGktb3ZlcmxhcCwgbilcbiAgc2hpZnQtdW5pdCA9IHVuaXQobilcbiAgYW50aS1vdmVybGFwID0gMHB4IHVubGVzcyBhbnRpLW92ZXJsYXBcbiAgYW50aS1vdmVybGFwID0gMXB4IGlmIGFudGktb3ZlcmxhcCBpcyB0cnVlXG4gIGlmIGxlbmd0aChhbnRpLW92ZXJsYXApIGlzIDFcbiAgICByZXR1cm4gLWNvbnZlcnQtdG8oc2hpZnQtdW5pdCwgYW50aS1vdmVybGFwKVxuICBmb3IgdmFsIGluIGFudGktb3ZlcmxhcFxuICAgIHJldHVybiB2YWwgaWYgdW5pdCh2YWwpIGlzIHNoaWZ0LXVuaXRcblxuLWFkanVzdC1vdmVybGFwKGFudGktb3ZlcmxhcCwgbiwgc2lkZSA9ICdtaW4nKVxuICAtc2hpZnQgPSAtb3ZlcmxhcC1zaGlmdChhbnRpLW92ZXJsYXAsIG4pXG4gIGlmIChzaWRlIGlzICdtaW4nIGFuZCAtc2hpZnQgPiAwKSBvciAoc2lkZSBpcyAnbWF4JyBhbmQgLXNoaWZ0IDwgMClcbiAgICBuID0gbiArIC1zaGlmdFxuICByZXR1cm4gblxuXG4taXMtcG9zaXRpdmUobilcbiAgcmV0dXJuIG4gPj0gMFxuXG4tZGVuc2l0eS1xdWVyaWVzKGRlbnNpdHkpXG4gIGRlbnNpdHkgPSBydXB0dXJlLnJldGluYS1kZW5zaXR5IGlmIGRlbnNpdHkgaXMgJ3JldGluYSdcbiAgcXVlcmllcyA9ICgpXG4gIGZvciBxdWVyeSBpbiBydXB0dXJlLmRlbnNpdHktcXVlcmllc1xuICAgIGlmIHF1ZXJ5IGlzICd3ZWJraXQnXG4gICAgICBwdXNoKHF1ZXJpZXMsICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAlcyknICUgKGRlbnNpdHkpKVxuICAgIGVsc2UgaWYgcXVlcnkgaXMgJ21veidcbiAgICAgIHB1c2gocXVlcmllcywgJyhtaW4tLW1vei1kZXZpY2UtcGl4ZWwtcmF0aW86ICVzKScgJSAoZGVuc2l0eSkpXG4gICAgZWxzZSBpZiBxdWVyeSBpcyAnbydcbiAgICAgIHB1c2gocXVlcmllcywgJygtby1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAlcy8xKScgJSAoZGVuc2l0eSkpXG4gICAgZWxzZSBpZiBxdWVyeSBpcyAncmF0aW8nXG4gICAgICBwdXNoKHF1ZXJpZXMsICcobWluLWRldmljZS1waXhlbC1yYXRpbzogJXMpJyAlIChkZW5zaXR5KSlcbiAgICBlbHNlIGlmIHF1ZXJ5IGlzICdkcGknXG4gICAgICBwdXNoKHF1ZXJpZXMsICcobWluLXJlc29sdXRpb246ICVzZHBpKScgJSAocm91bmQoZGVuc2l0eSAqIDk2LCAxKSkpXG4gICAgZWxzZSBpZiBxdWVyeSBpcyAnZHBweCdcbiAgICAgIHB1c2gocXVlcmllcywgJyhtaW4tcmVzb2x1dGlvbjogJXNkcHB4KScgJSAoZGVuc2l0eSkpXG4gIHJldHVybiBxdWVyaWVzXG5cbi8vICtiZXR3ZWVuKG1pbiwgbWF4KVxuLy8gdXNhZ2UgKHNjYWxlIGNhbiBiZSBtaXhlZCB3aXRoIGN1c3RvbSB2YWx1ZXMpOlxuLy8gICAtICtiZXR3ZWVuKDEsIDMpIHNjYWxlOnNjYWxlXG4vLyAgIC0gK2JldHdlZW4oMCwgMykgMCB3aWR0aDpzY2FsZVxuLy8gICAtICtiZXR3ZWVuKDIwMHB4LCA1MDBweCkgY3VzdG9tOmN1c3RvbVxuLy8gICAtICtiZXR3ZWVuKDAsIDMwMHB4KSAwIHdpZHRoOmN1c3RvbVxuLy8gICAtICtiZXR3ZWVuKDEsIDMwMHB4KSBzY2FsZTpjdXN0b21cbi8vICAgLSArYmV0d2VlbigyMDBweCwgNCkgY3VzdG9tOnNjYWxlXG5cbmJldHdlZW4obWluLCBtYXgsIGFudGktb3ZlcmxhcCA9IHJ1cHR1cmUuYW50aS1vdmVybGFwLCBkZW5zaXR5ID0gbnVsbCwgb3JpZW50YXRpb24gPSBudWxsLCB1c2UtZGV2aWNlLXdpZHRoID0gcnVwdHVyZS51c2UtZGV2aWNlLXdpZHRoKVxuXG4gIGlmIHR5cGVvZihtaW4pIGlzICdzdHJpbmcnXG4gICAgbWluID0gLWdldC1zY2FsZS1udW1iZXIobWluKVxuXG4gIGlmIHR5cGVvZihtYXgpIGlzICdzdHJpbmcnXG4gICAgbWF4ID0gLWdldC1zY2FsZS1udW1iZXIobWF4KVxuXG4gIC1taW4gPSBydXB0dXJlLnNjYWxlW21pbiAtIDFdIHVubGVzcyAtaXMtemVybyhtaW4pIG9yIChub3QgLW9uLXNjYWxlKG1pbikpXG4gIC1tYXggPSBydXB0dXJlLnNjYWxlW21heF0gdW5sZXNzIG5vdCAtb24tc2NhbGUobWF4KVxuICAtbWluID89IG1pblxuICAtbWF4ID89IG1heFxuXG4gIGNvbmRpdGlvbiA9ICdvbmx5IHNjcmVlbidcbiAgdXNlLWRldmljZS13aWR0aCA9IHVzZS1kZXZpY2Utd2lkdGggPyAnZGV2aWNlLScgOiAnJ1xuICB1bmxlc3MgLW1pbiBpcyAwXG4gICAgLW1pbiA9IC1jb252ZXJ0LXRvKCdlbScsIC1taW4pIGlmIHJ1cHR1cmUuZW5hYmxlLWVtLWJyZWFrcG9pbnRzXG4gICAgLW1pbiA9IC1hZGp1c3Qtb3ZlcmxhcChhbnRpLW92ZXJsYXAsIC1taW4sIHNpZGU6ICdtaW4nKVxuICAgIGNvbmRpdGlvbiA9IGNvbmRpdGlvbiArICcgYW5kIChtaW4tJyArIHVzZS1kZXZpY2Utd2lkdGggKyAnd2lkdGg6ICVzKScgJSAoLW1pbilcbiAgdW5sZXNzIC1sYXJnZXItdGhhbi1zY2FsZShtYXgpXG4gICAgLW1heCA9IC1jb252ZXJ0LXRvKCdlbScsIC1tYXgpIGlmIHJ1cHR1cmUuZW5hYmxlLWVtLWJyZWFrcG9pbnRzXG4gICAgLW1heCA9IC1hZGp1c3Qtb3ZlcmxhcChhbnRpLW92ZXJsYXAsIC1tYXgsIHNpZGU6ICdtYXgnKVxuICAgIGNvbmRpdGlvbiA9IGNvbmRpdGlvbiArICcgYW5kIChtYXgtJyArIHVzZS1kZXZpY2Utd2lkdGggKyAnd2lkdGg6ICVzKScgJSAoLW1heClcbiAgaWYgb3JpZW50YXRpb25cbiAgICBjb25kaXRpb24gPSBjb25kaXRpb24gKyAnIGFuZCAob3JpZW50YXRpb246ICVzKScgJSAob3JpZW50YXRpb24pXG4gIGlmIGRlbnNpdHlcbiAgICBjb25kaXRpb25zID0gKClcbiAgICBmb3IgcXVlcnkgaW4gLWRlbnNpdHktcXVlcmllcyhkZW5zaXR5KVxuICAgICAgcHVzaChjb25kaXRpb25zLCBjb25kaXRpb24gKyAnIGFuZCAlcycgJSAocXVlcnkpKVxuICAgIGNvbmRpdGlvbiA9IGpvaW4oJywgJywgY29uZGl0aW9ucylcbiAgQG1lZGlhIGNvbmRpdGlvblxuICAgIHtibG9ja31cblxuYXQoc2NhbGUtcG9pbnQsIGFudGktb3ZlcmxhcCA9IHJ1cHR1cmUuYW50aS1vdmVybGFwLCBkZW5zaXR5ID0gbnVsbCwgb3JpZW50YXRpb24gPSBudWxsLCB1c2UtZGV2aWNlLXdpZHRoID0gcnVwdHVyZS51c2UtZGV2aWNlLXdpZHRoKVxuICArYmV0d2VlbihzY2FsZS1wb2ludCwgc2NhbGUtcG9pbnQsIGFudGktb3ZlcmxhcCwgZGVuc2l0eSwgb3JpZW50YXRpb24sIHVzZS1kZXZpY2Utd2lkdGgpXG4gICAge2Jsb2NrfVxuXG5mcm9tKHNjYWxlLXBvaW50LCBhbnRpLW92ZXJsYXAgPSBydXB0dXJlLmFudGktb3ZlcmxhcCwgZGVuc2l0eSA9IG51bGwsIG9yaWVudGF0aW9uID0gbnVsbCwgdXNlLWRldmljZS13aWR0aCA9IHJ1cHR1cmUudXNlLWRldmljZS13aWR0aClcbiAgK2JldHdlZW4oc2NhbGUtcG9pbnQsIGxlbmd0aChydXB0dXJlLnNjYWxlKSwgYW50aS1vdmVybGFwLCBkZW5zaXR5LCBvcmllbnRhdGlvbiwgdXNlLWRldmljZS13aWR0aClcbiAgICB7YmxvY2t9XG5cbmFib3ZlID0gZnJvbVxuXG50byhzY2FsZS1wb2ludCwgYW50aS1vdmVybGFwID0gcnVwdHVyZS5hbnRpLW92ZXJsYXAsIGRlbnNpdHkgPSBudWxsLCBvcmllbnRhdGlvbiA9IG51bGwsIHVzZS1kZXZpY2Utd2lkdGggPSBydXB0dXJlLnVzZS1kZXZpY2Utd2lkdGgpXG4gICtiZXR3ZWVuKDEsIHNjYWxlLXBvaW50LCBhbnRpLW92ZXJsYXAsIGRlbnNpdHksIG9yaWVudGF0aW9uLCB1c2UtZGV2aWNlLXdpZHRoKVxuICAgIHtibG9ja31cblxuYmVsb3cgPSB0b1xuXG5tb2JpbGUoYW50aS1vdmVybGFwID0gcnVwdHVyZS5hbnRpLW92ZXJsYXAsIGRlbnNpdHkgPSBudWxsLCBvcmllbnRhdGlvbiA9IG51bGwsIHVzZS1kZXZpY2Utd2lkdGggPSBydXB0dXJlLnVzZS1kZXZpY2Utd2lkdGgpXG4gICtiZWxvdyhydXB0dXJlLm1vYmlsZS1jdXRvZmYsIGFudGktb3ZlcmxhcCwgZGVuc2l0eSwgb3JpZW50YXRpb24sIHVzZS1kZXZpY2Utd2lkdGgpXG4gICAge2Jsb2NrfVxuXG50YWJsZXQoYW50aS1vdmVybGFwID0gcnVwdHVyZS5hbnRpLW92ZXJsYXAsIGRlbnNpdHkgPSBudWxsLCBvcmllbnRhdGlvbiA9IG51bGwsIHVzZS1kZXZpY2Utd2lkdGggPSBydXB0dXJlLnVzZS1kZXZpY2Utd2lkdGgpXG4gICtiZXR3ZWVuKHJ1cHR1cmUubW9iaWxlLWN1dG9mZiwgcnVwdHVyZS5kZXNrdG9wLWN1dG9mZiwgYW50aS1vdmVybGFwLCBkZW5zaXR5LCBvcmllbnRhdGlvbiwgdXNlLWRldmljZS13aWR0aClcbiAgICB7YmxvY2t9XG5cbmRlc2t0b3AoYW50aS1vdmVybGFwID0gcnVwdHVyZS5hbnRpLW92ZXJsYXAsIGRlbnNpdHkgPSBudWxsLCBvcmllbnRhdGlvbiA9IG51bGwsIHVzZS1kZXZpY2Utd2lkdGggPSBydXB0dXJlLnVzZS1kZXZpY2Utd2lkdGgpXG4gICthYm92ZShydXB0dXJlLmRlc2t0b3AtY3V0b2ZmLCBhbnRpLW92ZXJsYXAsIGRlbnNpdHksIG9yaWVudGF0aW9uLCB1c2UtZGV2aWNlLXdpZHRoKVxuICAgIHtibG9ja31cblxuZGVuc2l0eShkZW5zaXR5LCBvcmllbnRhdGlvbiA9IG51bGwpXG4gIGNvbmRpdGlvbnMgPSAoKVxuICBmb3IgcXVlcnkgaW4gLWRlbnNpdHktcXVlcmllcyhkZW5zaXR5KVxuICAgIGNvbmRpdGlvbiA9ICdvbmx5IHNjcmVlbiBhbmQgJXMnICUgKHF1ZXJ5KVxuICAgIGlmIG9yaWVudGF0aW9uXG4gICAgICBjb25kaXRpb24gPSBjb25kaXRpb24gKyAnIGFuZCAob3JpZW50YXRpb246ICVzKScgJSAob3JpZW50YXRpb24pXG4gICAgcHVzaChjb25kaXRpb25zLCBjb25kaXRpb24pXG4gIGNvbmRpdGlvbiA9IGpvaW4oJywgJywgY29uZGl0aW9ucylcbiAgQG1lZGlhIGNvbmRpdGlvblxuICAgIHtibG9ja31cblxucGl4ZWwtcmF0aW8gPSBkZW5zaXR5XG5cbnJldGluYShvcmllbnRhdGlvbiA9IG51bGwpXG4gICtkZW5zaXR5KCdyZXRpbmEnLCBvcmllbnRhdGlvbilcbiAgICB7YmxvY2t9XG5cbmxhbmRzY2FwZShkZW5zaXR5ID0gbnVsbClcbiAgaWYgZGVuc2l0eVxuICAgICtwaXhlbC1yYXRpbyhkZW5zaXR5LCBvcmllbnRhdGlvbjogbGFuZHNjYXBlKVxuICAgICAge2Jsb2NrfVxuICBlbHNlXG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSlcbiAgICAgIHtibG9ja31cblxucG9ydHJhaXQoZGVuc2l0eSA9IG51bGwpXG4gIGlmIGRlbnNpdHlcbiAgICArcGl4ZWwtcmF0aW8oZGVuc2l0eSwgb3JpZW50YXRpb246IHBvcnRyYWl0KVxuICAgICAge2Jsb2NrfVxuICBlbHNlXG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAob3JpZW50YXRpb246IHBvcnRyYWl0KVxuICAgICAge2Jsb2NrfVxuIiwiLy9cbi8vIExheW91dCBzdHlsZXNcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXJcbiAgICAtbW96LWJveC1zaXppbmcgYm9yZGVyLWJveFxuICAgIC13ZWJraXQtYm94LXNpemluZyBib3JkZXItYm94XG4gICAgYm94LXNpemluZyBib3JkZXItYm94XG5cbmh0bWwsXG5ib2R5XG4gICAgbWFyZ2luIDBcbiAgICBwYWRkaW5nIDBcblxuYm9keVxuICAgIGZvbnQtZmFtaWx5ICRsaXZvcnlcbiAgICBmb250LXNpemUgMTBweFxuXG4uY2VudGVyXG4gICAgd2lkdGggMTIwMHB4XG4gICAgbWFyZ2luIDAgYXV0b1xuXG4uY29udGVudC1jb250YWluZXJcbiAgICBwYWRkaW5nIDMwcHggMFxuXG4gICAgYm9keS5ob21lICZcbiAgICAgICAgcGFkZGluZyAwXG5cbi5zbGltQ29udGFpbmVyXG4gICAgd2lkdGggNTAlXG5cbi5vdXRsaW5lXG4gICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICBtYXJnaW4gMFxuICAgIHBhZGRpbmcgMFxuICAgIG92ZXJmbG93IGhpZGRlblxuXG4gICAgbGlcbiAgICAgICAgZGlzcGxheSBibG9ja1xuICAgICAgICBmbG9hdCBsZWZ0XG4gICAgICAgIGZvbnQtc2l6ZSAxMnB4XG4gICAgICAgIHRleHQtdHJhbnNmb3JtIHVwcGVyY2FzZVxuICAgICAgICBjb2xvciAkY3JhbmJlcnJ5LWxpZ2h0XG4gICAgICAgIGJvcmRlciAxcHggc29saWQgI2RjZDRjY1xuICAgICAgICBtYXJnaW4gMCAycHggNHB4XG4gICAgICAgIHBhZGRpbmcgN3B4IDEycHhcbiAgICAgICAgY3Vyc29yIHBvaW50ZXJcbiAgICAgICAgdHJhbnNpdGlvbiBhbGwgLjJzXG5cbiAgICAgICAgJjpob3ZlclxuICAgICAgICAgICAgYm9yZGVyIDFweCBzb2xpZCAkY3JhbmJlcnJ5LWxpZ2h0XG4gICAgICAgICAgICB0cmFuc2l0aW9uIGFsbCAuMnNcblxuICAgICAgICAmLmFjdGl2ZVxuICAgICAgICAgICAgYm9yZGVyIDFweCBzb2xpZCAkY3JhbmJlcnJ5LWxpZ2h0XG5cblxuXG4rYmVsb3coMTI2MHB4KVxuICAgIC5jZW50ZXJcbiAgICAgICAgd2lkdGggMTAwJVxuICAgICAgICBwYWRkaW5nIDAgMzBweFxuXG4gICAgLnNsaW1Db250YWluZXJcbiAgICAgICAgd2lkdGggNjAlXG5cbitiZWxvdyg3NjhweClcbiAgICAuY2VudGVyXG4gICAgICAgIHBhZGRpbmcgMCAyMHB4XG5cbiAgICAuc2xpbUNvbnRhaW5lclxuICAgICAgICB3aWR0aCA4MCVcblxuK2JlbG93KDUwMHB4KVxuICAgIC5jZW50ZXJcbiAgICAgICAgcGFkZGluZyAwIDE1cHhcblxuICAgIC5zbGltQ29udGFpbmVyXG4gICAgICAgIHdpZHRoIDEwMCVcbiIsIi8qXG4gKiBPdmVyZmxvdyB1dGlsaXR5LiBNYXBzIHRvIHJlZ3VsYXIgb3ZlcmZsb3csIGFuZCBhZGRzIGFuIGVsbGlwc2lzIHZhbHVlLlxuICpcbiAqIFN5bm9wc2lzOlxuICpcbiAqICAgb3ZlcmZsb3c6IDx0eXBlPlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgICBvdmVyZmxvdzogYXV0b1xuICogICAgIG92ZXJmbG93OiBoaWRkZW5cbiAqICAgICBvdmVyZmxvdzogZWxsaXBzaXNcbiAqXG4gKi9cblxub3ZlcmZsb3coKVxuICBpZiBhcmd1bWVudHNbMF0gPT0gZWxsaXBzaXNcbiAgICBlbGxpcHNpcygpXG4gIGVsc2VcbiAgICBvdmVyZmxvdzogYXJndW1lbnRzXG4iLCIvKlxuICogYm9yZGVyOiA8Y29sb3I+XG4gKiBib3JkZXI6IC4uLlxuICovXG5cbmJvcmRlcihjb2xvciwgYXJncy4uLilcbiAgaWYgY29sb3IgaXMgYSAnY29sb3InXG4gICAgYm9yZGVyOiAxcHggc29saWQgY29sb3IgYXJnc1xuICBlbHNlXG4gICAgYm9yZGVyOiBhcmd1bWVudHNcbiIsIi8vXG4vLyBGb3JtIGVsZW1lbnQgc3R5bGVzXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uaW5wdXRHcm91cCxcbi5mYXZvcml0ZXNHcm91cFxuICAgIHBvc2l0aW9uIHJlbGF0aXZlXG4gICAgb3ZlcmZsb3cgaGlkZGVuXG4gICAgbWFyZ2luLWJvdHRvbSAyMHB4XG5cbi5zdWJtaXRHcm91cFxuICAgIHBhZGRpbmctbGVmdCAyNSVcblxuICAgIC5idXR0b25cbiAgICAgICAgd2lkdGggMTAwJVxuICAgICAgICB0ZXh0LWFsaWduIGNlbnRlclxuXG5sYWJlbCxcbnAubGFiZWxcbiAgICBkaXNwbGF5IGJsb2NrXG4gICAgZmxvYXQgbGVmdFxuICAgIHdpZHRoIDI1JVxuICAgIGZvbnQtc2l6ZSAxNXB4XG4gICAgdGV4dC10cmFuc2Zvcm0gdXBwZXJjYXNlXG4gICAgY29sb3IgJGJlaWdlLWRhcmtcbiAgICBwYWRkaW5nIDEwcHggMCA2cHhcblxuaW5wdXRbdHlwZT0ndGV4dCddLFxuaW5wdXRbdHlwZT0nZW1haWwnXSxcbnRleHRhcmVhXG4gICAgZGlzcGxheSBibG9ja1xuICAgIHdpZHRoIDc1JVxuICAgIGZvbnQtZmFtaWx5ICRsaXZvcnlcbiAgICBmb250LXNpemUgMTVweFxuICAgIGxpbmUtaGVpZ2h0IDIycHhcbiAgICBib3JkZXIgMXB4IHNvbGlkICRjcmVhbS1saWdodFxuICAgIG91dGxpbmUgbm9uZVxuICAgIHBhZGRpbmcgOHB4IDI1cHggN3B4IDEycHhcblxuICAgIC5oYXMtZXJyb3JzICZcbiAgICAgICAgYm9yZGVyIDFweCBzb2xpZCAkZ29sZGVucm9kXG5cbnRleHRhcmVhXG4gICAgaGVpZ2h0IDEwMHB4XG4gICAgcmVzaXplIHZlcnRpY2FsXG5cblxuLy8gU3VjY2VzcyBtZXNzYWdpbmdcblxuLmNvbnRhY3RGb3JtQ29udGFpbmVyXG5cbiAgICAuZmEtY2hlY2ssXG4gICAgLmZhLXRpbWVzXG4gICAgICAgIGRpc3BsYXkgbm9uZVxuICAgICAgICBwb3NpdGlvbiBhYnNvbHV0ZVxuICAgICAgICB0b3AgMTVweFxuICAgICAgICByaWdodCAxMHB4XG4gICAgICAgIGZvbnQtc2l6ZSAxMHB4XG4gICAgICAgIGNvbG9yIGdyZWVuXG5cbiAgICAuZmEtdGltZXNcbiAgICAgICAgY29sb3IgJGdvbGRlbnJvZFxuXG4gICAgLnZhbGlkXG4gICAgICAgIC5mYS1jaGVja1xuICAgICAgICAgICAgZGlzcGxheSBibG9ja1xuXG4gICAgLmludmFsaWRcbiAgICAgICAgLmZhLXRpbWVzXG4gICAgICAgICAgICBkaXNwbGF5IGJsb2NrXG5cblxuLy8gRXJyb3IgbWVzc2FnaW5nXG5cbi5lcnJvcnNcbiAgICBkaXNwbGF5IG5vbmVcbiAgICB3aWR0aCA3NSVcbiAgICBmbG9hdCByaWdodFxuICAgIGJhY2tncm91bmQgJGdvbGRlbnJvZFxuICAgIGxpc3Qtc3R5bGUgbm9uZVxuICAgIG1hcmdpbiAwXG4gICAgcGFkZGluZyAwXG5cbiAgICAuaW52YWxpZCAmXG4gICAgICAgIGRpc3BsYXkgYmxvY2tcblxuICAgIGxpXG4gICAgICAgIGRpc3BsYXkgbm9uZVxuICAgICAgICBmb250LXNpemUgMTJweFxuICAgICAgICBjb2xvciAkd2hpdGVcbiAgICAgICAgcGFkZGluZyA3cHggMTBweFxuXG5cbitiZWxvdyg0MDBweClcblxuICAgIC5pbnB1dEdyb3VwXG4gICAgICAgIG1hcmdpbi1ib3R0b20gMTVweFxuXG4gICAgLnN1Ym1pdEdyb3VwXG4gICAgICAgIG1hcmdpbi10b3AgMjBweFxuICAgICAgICBwYWRkaW5nIDBcblxuICAgIGxhYmVsLFxuICAgIHAubGFiZWwsXG4gICAgaW5wdXRbdHlwZT0ndGV4dCddLFxuICAgIGlucHV0W3R5cGU9J2VtYWlsJ10sXG4gICAgdGV4dGFyZWEsXG4gICAgdWwub3B0aW9uc1xuICAgICAgICB3aWR0aCAxMDAlXG4gICAgICAgIGZsb2F0IG5vbmVcbiAgICAgICAgdGV4dC1hbGlnbiBjZW50ZXJcblxuICAgIGxhYmVsXG4gICAgICAgIG1hcmdpbi1ib3R0b20gNXB4XG4gICAgICAgIHBhZGRpbmcgMFxuXG4gICAgdWwub3B0aW9uc1xuICAgICAgICBsaVxuICAgICAgICAgICAgZmxvYXQgbm9uZVxuICAgICAgICAgICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcblxuICAgIC5lcnJvcnNcbiAgICAgICAgd2lkdGggMTAwJVxuXG4gICAgLmNvbnRhY3RGb3JtQ29udGFpbmVyXG4gICAgICAgIC5mYS1jaGVjayxcbiAgICAgICAgLmZhLXRpbWVzXG4gICAgICAgICAgICB0b3AgMzlweFxuIiwiLy9cbi8vIEZvb3RlciBzdHlsZXNcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5nbG9iYWwtZm9vdGVyXG4gICAgYmFja2dyb3VuZCAkYmVpZ2VcbiAgICBwYWRkaW5nIDIwcHggMFxuICAgIG1hcmdpbi10b3AgNjBweFxuXG4gICAgcFxuICAgICAgICBmb250LXNpemUgLjdyZW1cbiAgICAgICAgbGluZS1oZWlnaHQgMXJlbVxuICAgICAgICBjb2xvciB3aGl0ZVxuICAgICAgICBtYXJnaW4gMFxuXG4gICAgYVxuICAgICAgICBjb2xvciAkY3JlYW1cblxuICAgICAgICAmOmhvdmVyXG4gICAgICAgICAgICBjb2xvciB3aGl0ZVxuXG4gICAgLmNlbnRlclxuICAgICAgICBvdmVyZmxvdyBoaWRkZW5cblxuICAgIC5zb2NpYWxcbiAgICAgICAgZmxvYXQgbGVmdFxuICAgICAgICBtYXgtd2lkdGggMzAwcHhcblxuICAgICAgICAuZmFjZWJvb2tcbiAgICAgICAgICAgIGRpc3BsYXkgYmxvY2tcbiAgICAgICAgICAgIGZsb2F0IGxlZnRcbiAgICAgICAgICAgIHdpZHRoIDMwcHhcbiAgICAgICAgICAgIGhlaWdodCAzMHB4XG4gICAgICAgICAgICBmb250LXNpemUgMS4ycmVtXG4gICAgICAgICAgICBjb2xvciB3aGl0ZVxuICAgICAgICAgICAgYmFja2dyb3VuZCAkYmVpZ2UtZGFya1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0IDEwcHhcbiAgICAgICAgICAgIHBhZGRpbmctdG9wIDNweFxuICAgICAgICAgICAgdGV4dC1hbGlnbiBjZW50ZXJcblxuICAgICAgICAgICAgJjpob3ZlclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQgJGNyYW5iZXJyeVxuXG4gICAgLmxlZ2FsXG4gICAgICAgIGZsb2F0IHJpZ2h0XG4gICAgICAgIHRleHQtYWxpZ24gcmlnaHRcblxuXG4vLyBTdGlja3kgZm9vdGVyIHN0eWxlc1xuXG4qXG4gICAgbWFyZ2luIDBcblxuaHRtbCwgYm9keVxuICAgIGhlaWdodCAxMDAlXG5cbi5wYWdlLXdyYXBcbiAgICBtaW4taGVpZ2h0IDEwMCVcbiAgICAvKiBlcXVhbCB0byBmb290ZXIgaGVpZ2h0ICovXG4gICAgbWFyZ2luLWJvdHRvbSAtMTMwcHhcblxuLnBhZ2Utd3JhcDphZnRlclxuICAgIGNvbnRlbnQgXCJcIlxuICAgIGRpc3BsYXkgYmxvY2tcblxuLmdsb2JhbC1mb290ZXJcbiAgICBoZWlnaHQgNzBweFxuICAgIG1hcmdpbi10b3AgNjBweFxuXG4ucGFnZS13cmFwOmFmdGVyXG4gICAgLyogLnB1c2ggbXVzdCBiZSB0aGUgc2FtZSBoZWlnaHQgYXMgZm9vdGVyICovXG4gICAgaGVpZ2h0IDEzMHB4XG5cblxuXG4rYmVsb3coNTAwcHgpXG4gICAgXG4gICAgLmdsb2JhbC1mb290ZXJcbiAgICAgICAgaGVpZ2h0IDEyMHB4XG4gICAgICAgIFxuICAgICAgICAuc29jaWFsXG4gICAgICAgICAgICBmbG9hdCBub25lXG4gICAgICAgICAgICB3aWR0aCAxMDAlXG4gICAgICAgICAgICAvLyB0ZXh0LWFsaWduIGNlbnRlclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbSAxNXB4XG4gICAgICAgIFxuICAgICAgICAubGVnYWxcbiAgICAgICAgICAgIGZsb2F0IG5vbmVcbiAgICAgICAgICAgIHRleHQtYWxpZ24gbGVmdFxuICAgIFxuICAgIC5wYWdlLXdyYXBcbiAgICAgICAgbWFyZ2luLWJvdHRvbSAtMTIwcHhcbiAgICBcbiAgICAucGFnZS13cmFwOmFmdGVyXG4gICAgICAgIGhlaWdodCAxMjBweCIsIi8vXG4vLyBIZWFkZXIgc3R5bGVzXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uZ2xvYmFsLWhlYWRlclxuICAgIG1hcmdpbi1ib3R0b20gMzBweFxuXG4gICAgLndlYnNpdGUtdGl0bGVcbiAgICAgICAgdGV4dC1hbGlnbiBjZW50ZXJcbiAgICAgICAgcGFkZGluZyA1cHggMCA3cHhcblxuICAgICAgICBoMVxuICAgICAgICAgICAgbWFyZ2luIDBcblxuICAgICAgICBoMlxuICAgICAgICAgICAgZGlzcGxheSBub25lXG4gICAgICAgICAgICBtYXJnaW4gLTVweCAwIDBcblxuXG5cbiAgICAuZ2xvYmFsLW5hdlxuICAgICAgICB0ZXh0LWFsaWduIGNlbnRlclxuICAgICAgICBiYWNrZ3JvdW5kICRjcmFuYmVycnktZGFyayB1cmwoLi4vaW1nL2dsb2JhbC9iZ19uYXYucG5nKSByZXBlYXQteCBjZW50ZXIgY2VudGVyXG5cbiAgICAgICAgLm5hdi1jb250YWluZXJcbiAgICAgICAgICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gICAgICAgICAgICBiYWNrZ3JvdW5kICRjcmFuYmVycnktZGFya1xuICAgICAgICAgICAgcGFkZGluZyAwIDMwcHhcblxuICAgICAgICBhOmxpbmssXG4gICAgICAgIGE6dmlzaXRlZFxuICAgICAgICAgICAgZGlzcGxheSBibG9ja1xuICAgICAgICAgICAgZmxvYXQgbGVmdFxuICAgICAgICAgICAgZm9udC1mYW1pbHkgJHNlcmlmaXFvXG4gICAgICAgICAgICBmb250LXNpemUgMS40cmVtXG4gICAgICAgICAgICBjb2xvciB3aGl0ZVxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uIG5vbmVcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtIHVwcGVyY2FzZVxuICAgICAgICAgICAgcGFkZGluZyAxM3B4IDIwcHggOHB4XG5cbiAgICAgICAgYTpob3ZlclxuICAgICAgICAgICAgY29sb3IgJGNyZWFtXG4gICAgICAgICAgICB0cmFuc2l0aW9uIGNvbG9yIC4ycyBlYXNlXG5cbiAgICAgICAgYS5hY3RpdmVcbiAgICAgICAgICAgIGNvbG9yICRjcmVhbVxuXG5cblxuICAgIC8vK2JlbG93KDEyNjBweClcblxuXG4gICAgLy8rYmVsb3coNzY4cHgpXG5cblxuICAgICtiZWxvdyg1MDBweClcbiAgICAgICAgLmdsb2JhbC1uYXZcbiAgICAgICAgICAgIGJhY2tncm91bmQgJGNyYW5iZXJyeS1kYXJrXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5uYXYtY29udGFpbmVyXG4gICAgICAgICAgICAgICAgcGFkZGluZyAwXG5cbiAgICAgICAgICAgIGE6bGluayxcbiAgICAgICAgICAgIGE6dmlzaXRlZFxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZSAxLjFyZW1cbiAgICAgICAgICAgICAgICBwYWRkaW5nIDEwcHggMTVweCA2cHhcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmZpcnN0LWNoaWxkXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdCAwXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpsYXN0LWNoaWxkXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQgMCIsIi8vXG4vLyBDb250YWN0IHBhZ2Ugc3R5bGVzXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5ib2R5LmNvbnRhY3RcblxuICAgIC5jb250YWN0U3VjY2Vzc1xuICAgICAgICBkaXNwbGF5IG5vbmVcbiAgICAgICAgdGV4dC1hbGlnbiBjZW50ZXJcbiAgICAgICAgYmFja2dyb3VuZCAkY3JlYW0tbGlnaHRlclxuICAgICAgICBtYXJnaW4gMCBhdXRvXG4gICAgICAgIHBhZGRpbmcgMjBweCAyMHB4IDBcbiAgICAgICAgbWFyZ2luLWJvdHRvbSAxMHB4XG5cbiAgICAgICAgaW1nXG4gICAgICAgICAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgICAgICAgICAgbWF4LXdpZHRoIDEwMCVcbiAgICAgICAgICAgIG1hcmdpbi10b3AgMzBweFxuXG4gICAgLmNvbnRhY3RGb3JtQ29udGFpbmVyXG4gICAgICAgIGJhY2tncm91bmQgJGNyZWFtLWxpZ2h0ZXJcbiAgICAgICAgbWFyZ2luIDAgYXV0b1xuICAgICAgICBwYWRkaW5nIDIwcHhcblxuICAgIC5vdXRsaW5lXG4gICAgICAgIG1hcmdpbi10b3AgNHB4XG5cbiAgICAgICAgbGlcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b20gMFxuXG4gICAgLm5vRmF2b3JpdGVzXG4gICAgICAgIGRpc3BsYXkgbm9uZVxuXG4gICAgLmZhdm9yaXRlc0xpc3RcbiAgICAgICAgd2lkdGggNzUlXG4gICAgICAgIGZsb2F0IGxlZnRcbiAgICAgICAgbGlzdC1zdHlsZSBub25lXG4gICAgICAgIGJhY2tncm91bmQgJGNyZWFtLWxpZ2h0XG4gICAgICAgIG1hcmdpbiAwXG4gICAgICAgIHBhZGRpbmcgMTRweCAxMHB4IDZweFxuXG4gICAgICAgIGxpXG4gICAgICAgICAgICBwb3NpdGlvbiByZWxhdGl2ZVxuICAgICAgICAgICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICAgICAgICAgIHdpZHRoIDMxLjI1JVxuICAgICAgICAgICAgaGVpZ2h0IDEwNXB4XG4gICAgICAgICAgICBtYXJnaW4gMCAxJSAyJVxuICAgICAgICAgICAgdmVydGljYWwtYWxpZ24gdG9wXG4gICAgICAgICAgICBvdmVyZmxvdyBoaWRkZW5cblxuICAgICAgICAgICAgaW1nXG4gICAgICAgICAgICAgICAgd2lkdGggMTAwJVxuXG4gICAgLmJ1dHRvbi0tY29udGFjdFN1Ym1pdFxuICAgICAgICBwb3NpdGlvbiByZWxhdGl2ZVxuXG4gICAgLnNwaW5uZXJcbiAgICAgICAgZGlzcGxheSBub25lXG4gICAgICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgICAgIHRvcCA3cHhcbiAgICAgICAgbWFyZ2luLWxlZnQgMTBweFxuXG4gICAgICAgICYuc2hvd1xuICAgICAgICAgICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcblxuICAgIC8vICtiZWxvdyg0MDBweClcbiAgICAvLyAgICAgLmNvbnRhY3RTdWNjZXNzXG4gICAgLy8gICAgICAgICBwYWRkaW5nIDE1cHggNXB4XG4iLCIvL1xuLy8gRkFRIHBhZ2Ugc3R5bGVzXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5ib2R5LmZhcVxuXG4gICAgLnF1ZXN0aW9uc1xuICAgICAgICB3aWR0aCA1MCVcbiAgICAgICAgbWFyZ2luIDAgYXV0b1xuXG4gICAgICAgIHAucXVlc3Rpb25cbiAgICAgICAgICAgIGNvbG9yICRnb2xkZW5yb2RcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b20gM3B4IHNvbGlkICRjcmVhbS1saWdodGVyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tIDVweFxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b20gMnB4XG5cbiAgICAgICAgYXJ0aWNsZVxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbSAzMHB4XG5cbiAgICArYmVsb3coNzY4cHgpXG4gICAgICAgIC5xdWVzdGlvbnNcbiAgICAgICAgICAgIHdpZHRoIDEwMCUiLCIvL1xuLy8gSG9tZSBwYWdlIHN0eWxlc1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuYm9keS5ob21lXG5cbiAgICAuZ2xvYmFsLWhlYWRlclxuICAgICAgICBwYWRkaW5nIDIwcHggMCAxOTBweFxuICAgICAgICBtYXJnaW4tYm90dG9tIDBcblxuICAgIC53ZWJzaXRlLXRpdGxlXG4gICAgICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgICAgIHRvcCA4NXB4XG4gICAgICAgIHdpZHRoIDEwMCVcbiAgICAgICAgcGFkZGluZyAwXG5cbiAgICAgICAgaDFcbiAgICAgICAgICAgIGZvbnQtc2l6ZSA4OHB4XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tIDEwcHhcblxuICAgICAgICBoMlxuICAgICAgICAgICAgZGlzcGxheSBibG9ja1xuXG4gICAgLmNvbnRlbnQtY29udGFpbmVyXG4gICAgICAgIHBhZGRpbmctYm90dG9tIDMwcHhcblxuICAgIC5jZW50ZXJcbiAgICAgICAgb3ZlcmZsb3cgaGlkZGVuXG5cbiAgICAuaGVyb1xuICAgICAgICBoZWlnaHQgNTAwcHhcbiAgICAgICAgYmFja2dyb3VuZCAkYmxhY2tcbiAgICAgICAgbWFyZ2luLWJvdHRvbSAzMHB4XG4gICAgICAgIG92ZXJmbG93IGhpZGRlblxuXG4gICAgICAgIC5jZW50ZXJcbiAgICAgICAgICAgIHBvc2l0aW9uIHJlbGF0aXZlXG4gICAgICAgICAgICBoZWlnaHQgMTAwJVxuICAgICAgICAgICAgb3ZlcmZsb3cgdmlzaWJsZVxuXG4gICAgLmhlcm9JbWFnZVxuICAgICAgICBwb3NpdGlvbiBhYnNvbHV0ZVxuICAgICAgICB0b3AgLTE4MHB4XG4gICAgICAgIGxlZnQgLTI1MHB4XG5cbiAgICAuY29sb3JTZWxlY3RvclxuICAgICAgICBwb3NpdGlvbiByZWxhdGl2ZVxuICAgICAgICBmbG9hdCByaWdodFxuICAgICAgICB3aWR0aCA0MTVweFxuICAgICAgICB0ZXh0LWFsaWduIGNlbnRlclxuICAgICAgICBjb2xvciAkd2hpdGVcbiAgICAgICAgbWFyZ2luLXRvcCAxNDBweFxuXG4gICAgICAgIHBcbiAgICAgICAgICAgIGNvbG9yICRjcmVhbVxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbSAyMHB4XG5cbiAgICAgICAgdWxcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b20gMjBweFxuXG4gICAgICAgICAgICBsaVxuICAgICAgICAgICAgICAgIGNvbG9yICR3aGl0ZVxuICAgICAgICAgICAgICAgIGJvcmRlciAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAuMilcblxuICAgICAgICAgICAgICAgICY6aG92ZXJcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyIDFweCBzb2xpZCAkd2hpdGVcblxuICAgIC5jb2xvckltYWdlc1xuICAgICAgICBwb3NpdGlvbiByZWxhdGl2ZVxuICAgICAgICB3aWR0aCAyNTBweFxuICAgICAgICBoZWlnaHQgMTUwcHhcbiAgICAgICAgbWFyZ2luIDAgYXV0b1xuXG4gICAgICAgIGltZ1xuICAgICAgICAgICAgcG9zaXRpb24gYWJzb2x1dGVcbiAgICAgICAgICAgIHRvcCAwXG4gICAgICAgICAgICBsZWZ0IDBcbiAgICAgICAgICAgIHdpZHRoIDEwMCVcbiAgICAgICAgICAgIGhlaWdodCAxMDAlXG4gICAgICAgICAgICBvcGFjaXR5IDBcbiAgICAgICAgICAgIHRyYW5zaXRpb24gb3BhY2l0eSAuMnNcblxuICAgICAgICAuYWN0aXZlXG4gICAgICAgICAgICBvcGFjaXR5IDFcbiAgICAgICAgICAgIHRyYW5zaXRpb24gb3BhY2l0eSAuMnNcblxuICAgIC5pbnRyb1xuICAgICAgICBmbG9hdCBsZWZ0XG4gICAgICAgIHdpZHRoIDQwJVxuICAgICAgICBwYWRkaW5nLXJpZ2h0IDIwcHhcblxuXG4gICAgLmdhbGxlcnktLXNwb3RsaWdodFxuICAgICAgICBmbG9hdCBsZWZ0XG4gICAgICAgIHdpZHRoIDYwJVxuICAgICAgICBwYWRkaW5nLWxlZnQgMjBweFxuICAgICAgICBib3JkZXItbGVmdCAycHggc29saWQgJG1pc3RcblxuICAgICAgICBoM1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbSAyMHB4XG5cbiAgICAgICAgdWxcbiAgICAgICAgICAgIG1hcmdpbiAwXG4gICAgICAgICAgICBwYWRkaW5nIDBcbiAgICAgICAgICAgIGxpc3Qtc3R5bGUgbm9uZVxuICAgICAgICAgICAgb3ZlcmZsb3cgaGlkZGVuXG5cbiAgICAgICAgbGlcbiAgICAgICAgICAgIGZsb2F0IGxlZnRcbiAgICAgICAgICAgIHdpZHRoIDIyJVxuICAgICAgICAgICAgbWFyZ2luLWxlZnQgNCVcblxuICAgICAgICAgICAgJjpmaXJzdC1jaGlsZFxuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0IDBcblxuICAgICAgICBpbWdcbiAgICAgICAgICAgIHdpZHRoIDEwMCVcbiAgICAgICAgICAgIGhlaWdodCAxMDAlXG5cblxuXG4gICAgK2JlbG93KDEyNjBweClcblxuICAgICAgICAuaGVyb1xuICAgICAgICAgICAgaGVpZ2h0IDBcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tIDQwJVxuXG4gICAgICAgICAgICAuY29sb3JTZWxlY3RvclxuICAgICAgICAgICAgICAgIG1hcmdpbi10b3AgMTElXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0IDUlXG5cbiAgICAgICAgLmhlcm9JbWFnZVxuICAgICAgICAgICAgdG9wIC04MHB4XG4gICAgICAgICAgICBsZWZ0IC0xNSVcbiAgICAgICAgICAgIG1heC13aWR0aCA3MCVcblxuXG5cbiAgICArYmVsb3coMTAwMHB4KVxuXG4gICAgICAgIC5nbG9iYWwtaGVhZGVyXG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbSAxNjBweFxuXG4gICAgICAgIC53ZWJzaXRlLXRpdGxlXG4gICAgICAgICAgICBoMVxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZSA2OHB4XG5cbiAgICAgICAgLmhlcm9cbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tIDQwMHB4XG5cbiAgICAgICAgICAgIC5jb2xvclNlbGVjdG9yXG4gICAgICAgICAgICAgICAgZmxvYXQgbGVmdFxuICAgICAgICAgICAgICAgIG1hcmdpbi10b3AgOTBweFxuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodCAwXG5cbiAgICAgICAgLmhlcm9JbWFnZVxuICAgICAgICAgICAgdG9wIC0xMzBweFxuICAgICAgICAgICAgbGVmdCBhdXRvXG4gICAgICAgICAgICByaWdodCAtNDBweFxuICAgICAgICAgICAgbWF4LXdpZHRoIDkwJVxuICAgICAgICAgICAgb3BhY2l0eSAuNVxuXG5cblxuICAgICtiZWxvdyg3NjhweClcblxuICAgICAgICAuZ2xvYmFsLWhlYWRlclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b20gMTQwcHhcblxuICAgICAgICAgICAgaDFcbiAgICAgICAgICAgICAgICBmb250LXNpemUgNThweFxuXG4gICAgICAgICAgICBoMlxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZSAyN3B4XG5cbiAgICAgICAgLmhlcm9cbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tIDMwMHB4XG5cbiAgICAgICAgICAgIC5jb2xvclNlbGVjdG9yXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcCAzMHB4XG5cbiAgICAgICAgLmhlcm9JbWFnZVxuICAgICAgICAgICAgbWF4LXdpZHRoIDEwMCVcbiAgICAgICAgICAgIHJpZ2h0IC0xMTBweFxuXG4gICAgICAgIC5pbnRyb1xuICAgICAgICAgICAgd2lkdGggNTAlXG5cbiAgICAgICAgLmdhbGxlcnktLXNwb3RsaWdodFxuICAgICAgICAgICAgd2lkdGggNTAlXG5cblxuXG4gICAgK2JlbG93KDcwMHB4KVxuXG4gICAgICAgIC5oZXJvSW1hZ2VcbiAgICAgICAgICAgIHJpZ2h0IC0xNjBweFxuXG5cblxuICAgICtiZWxvdyg2MDBweClcblxuICAgICAgICAuZ2xvYmFsLWhlYWRlclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b20gMTIwcHhcblxuICAgICAgICAgICAgaDFcbiAgICAgICAgICAgICAgICBmb250LXNpemUgNDhweFxuXG4gICAgICAgICAgICBoMlxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZSAyMnB4XG5cbiAgICAgICAgLmhlcm9cbiAgICAgICAgICAgIGhlaWdodCBhdXRvXG4gICAgICAgICAgICBwYWRkaW5nIDIwcHggMFxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbSAyMHB4XG5cbiAgICAgICAgICAgIC5jb2xvclNlbGVjdG9yXG4gICAgICAgICAgICAgICAgd2lkdGggMTAwJVxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ24gY2VudGVyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcCAwXG5cbiAgICAgICAgICAgICAgICBsaVxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgICAgICAgICAgICAgICAgICBmbG9hdCBub25lXG5cblxuICAgICAgICAuaGVyb0ltYWdlXG4gICAgICAgICAgICBkaXNwbGF5IG5vbmVcblxuICAgICAgICAuaW50cm9cbiAgICAgICAgICAgIGZsb2F0IG5vbmVcbiAgICAgICAgICAgIHdpZHRoIDEwMCVcbiAgICAgICAgICAgIHRleHQtYWxpZ24gY2VudGVyXG4gICAgICAgICAgICBwYWRkaW5nIDBcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b20gMjVweFxuXG4gICAgICAgIC5nYWxsZXJ5LS1zcG90bGlnaHRcbiAgICAgICAgICAgIGZsb2F0IG5vbmVcbiAgICAgICAgICAgIHdpZHRoIDEwMCVcbiAgICAgICAgICAgIHRleHQtYWxpZ24gY2VudGVyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kICRjcmVhbS1saWdodGVyXG4gICAgICAgICAgICBib3JkZXIgMFxuICAgICAgICAgICAgcGFkZGluZyAxMHB4XG5cbiAgICAgICAgICAgIGgzXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbSAxMHB4XG5cblxuXG4gICAgK2JlbG93KDUwMHB4KVxuICAgICAgICAuZ2xvYmFsLWhlYWRlclxuICAgICAgICAgICAgcGFkZGluZy10b3AgMFxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b20gNzVweFxuXG4gICAgICAgIC5nbG9iYWwtbmF2XG4gICAgICAgICAgICBwb3NpdGlvbiBhYnNvbHV0ZVxuICAgICAgICAgICAgdG9wIDBcbiAgICAgICAgICAgIGxlZnQgMFxuICAgICAgICAgICAgcmlnaHQgMFxuXG4gICAgICAgIC53ZWJzaXRlLXRpdGxlXG4gICAgICAgICAgICBwb3NpdGlvbiByZWxhdGl2ZVxuICAgICAgICAgICAgdG9wIDYwcHhcblxuICAgICAgICAgICAgaDFcbiAgICAgICAgICAgICAgICBmb250LXNpemUgMzRweFxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b20gMjBweFxuIiwiLy9cbi8vIFRhY2sgcGFnZSBzdHlsZXNcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmJvZHkudGFja1xuXG4gICAgLnBhZ2Utd3JhcCA+IC5jZW50ZXJcbiAgICAgICAgb3ZlcmZsb3cgaGlkZGVuXG5cblxuICAgIC8vIFV0aWxpdGllcyBhcmVhXG5cbiAgICAudXRpbGl0aWVzXG4gICAgICAgIGZsb2F0IGxlZnRcbiAgICAgICAgd2lkdGggMjUlXG4gICAgICAgIGJhY2tncm91bmQgJGNyZWFtLWxpZ2h0ZXJcbiAgICAgICAgcGFkZGluZyAyMHB4XG5cbiAgICAgICAgPiBhcnRpY2xlXG4gICAgICAgICAgICBib3JkZXItYm90dG9tIDJweCBzb2xpZCAkY3JlYW0tbGlnaHRcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b20gMTVweFxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b20gMjVweFxuXG4gICAgICAgID4gYXJ0aWNsZTpsYXN0LWNoaWxkXG4gICAgICAgICAgICBib3JkZXItYm90dG9tIG5vbmVcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b20gMFxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b20gMFxuXG4gICAgICAgIHBcbiAgICAgICAgICAgIGNvbG9yICRiZWlnZS1kYXJrXG5cblxuICAgIC8vIENvbG9yIEZpbHRlcnNcblxuICAgIC5jb2xvckZpbHRlcnNcbiAgICAgICAgb3ZlcmZsb3cgaGlkZGVuXG4gICAgICAgIHRleHQtYWxpZ24gY2VudGVyXG5cbiAgICAgICAgPiAqXG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbiB0b3BcblxuICAgICAgICBwXG4gICAgICAgICAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgICAgICAgICAgd2lkdGggMTAwJVxuICAgICAgICAgICAgdGV4dC1hbGlnbiBsZWZ0XG4gICAgICAgICAgICBmb250LXNpemUgMTVweFxuICAgICAgICAgICAgcGFkZGluZyAwIDE1cHggMTBweCAwXG5cblxuICAgIC8vIE15IEZhdm9yaXRlc1xuXG4gICAgLmZhdm9yaXRlc1xuICAgICAgICBib3JkZXItYm90dG9tIDJweCBzb2xpZCAkY3JlYW0tbGlnaHRcbiAgICAgICAgLy8gbWFyZ2luLWJvdHRvbSAyNXB4XG4gICAgICAgIC8vIHBhZGRpbmctYm90dG9tIDMwcHhcblxuICAgICAgICAuYnV0dG9uXG4gICAgICAgICAgICB3aWR0aCAxMDAlXG4gICAgICAgICAgICB0ZXh0LWFsaWduIGNlbnRlclxuXG4gICAgLmZhdm9yaXRlc0xpc3RcbiAgICAgICAgbGlzdC1zdHlsZSBub25lXG4gICAgICAgIGJhY2tncm91bmQgJGNyZWFtLWxpZ2h0XG4gICAgICAgIG1hcmdpbiAwIDAgMjBweFxuICAgICAgICBwYWRkaW5nIDIlXG5cbiAgICAgICAgbGlcbiAgICAgICAgICAgIHBvc2l0aW9uIHJlbGF0aXZlXG4gICAgICAgICAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xuICAgICAgICAgICAgd2lkdGggNDYlXG4gICAgICAgICAgICBoZWlnaHQgMFxuICAgICAgICAgICAgbWFyZ2luIDIlXG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbSA0NiVcbiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduIHRvcFxuICAgICAgICAgICAgb3ZlcmZsb3cgaGlkZGVuXG5cbiAgICAgICAgICAgIGltZ1xuICAgICAgICAgICAgICAgIHdpZHRoIDEwMCVcblxuICAgICAgICBsaS5ub0Zhdm9yaXRlc1Byb21wdFxuICAgICAgICAgICAgZGlzcGxheSBub25lXG4gICAgICAgICAgICB3aWR0aCAxMDAlXG4gICAgICAgICAgICB0ZXh0LWFsaWduIGNlbnRlclxuXG4gICAgICAgICYubm9GYXZvcml0ZXNcbiAgICAgICAgICAgIC5ub0Zhdm9yaXRlc1Byb21wdFxuICAgICAgICAgICAgICAgIGRpc3BsYXkgYmxvY2tcbiAgICAgICAgICAgICAgICBoZWlnaHQgYXV0b1xuICAgICAgICAgICAgICAgIG1hcmdpbiAwXG4gICAgICAgICAgICAgICAgcGFkZGluZyA1JVxuXG4gICAgLnByaWNpbmdcbiAgICAgICAgcGFkZGluZy10b3AgOHB4XG5cbiAgICAgICAgcFxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbSAxNXB4XG5cbiAgICAgICAgcDpsYXN0LWNoaWxkXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tIDBcblxuXG4gICAgLy8gVGFjayBncmlkXG5cbiAgICAudGFja0xvYWRpbmdcbiAgICAgICAgcG9zaXRpb24gYWJzb2x1dGVcbiAgICAgICAgbGVmdCA1MCVcbiAgICAgICAgZGlzcGxheSBub25lXG4gICAgICAgIHdpZHRoIDIwMHB4XG4gICAgICAgIHRleHQtYWxpZ24gY2VudGVyXG4gICAgICAgIGJhY2tncm91bmQgcmdiYSgyNTUsIDI1NSwgMjU1LCAuOSlcbiAgICAgICAgYm9yZGVyIDFweCBzb2xpZCAkY3JlYW0tbGlnaHRcbiAgICAgICAgbWFyZ2luLXRvcCAyMDBweFxuICAgICAgICBtYXJnaW4tbGVmdCAtMTAwcHhcbiAgICAgICAgcGFkZGluZyAyMHB4XG4gICAgICAgIHotaW5kZXggOTk5OVxuXG4gICAgICAgICYuc2hvd1xuICAgICAgICAgICAgZGlzcGxheSBibG9ja1xuXG4gICAgLnRhY2tDb250YWluZXJcbiAgICAgICAgcG9zaXRpb24gcmVsYXRpdmVcbiAgICAgICAgZmxvYXQgcmlnaHRcbiAgICAgICAgd2lkdGggNzUlXG4gICAgICAgIG1pbi1oZWlnaHQgNDAwcHhcbiAgICAgICAgb3ZlcmZsb3cgaGlkZGVuXG4gICAgICAgIG1hcmdpbiAwIC0xLjI1JVxuXG4gICAgLnRhY2tJdGVtXG4gICAgICAgIGRpc3BsYXkgbm9uZVxuICAgICAgICBwb3NpdGlvbiByZWxhdGl2ZVxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbiB0b3BcbiAgICAgICAgd2lkdGggMjIuNSVcbiAgICAgICAgaGVpZ2h0IDBcbiAgICAgICAgbWFyZ2luIDAgMS4yNSUgMi41JVxuICAgICAgICBwYWRkaW5nLWJvdHRvbSAyMi41JVxuICAgICAgICBvdmVyZmxvdyBoaWRkZW5cblxuICAgICAgICBhXG4gICAgICAgICAgICBkaXNwbGF5IGJsb2NrXG5cbiAgICAgICAgaW1nXG4gICAgICAgICAgICB3aWR0aCAxMDAlXG4gICAgICAgICAgICBiYWNrZ3JvdW5kICRjcmFuYmVycnlcblxuICAgIC5tZXRhXG4gICAgICAgIHBvc2l0aW9uIGFic29sdXRlXG4gICAgICAgIHRvcCAwXG4gICAgICAgIGxlZnQgMFxuICAgICAgICByaWdodCAwXG4gICAgICAgIG1pbi1oZWlnaHQgNDBweFxuICAgICAgICBiYWNrZ3JvdW5kIHJnYmEoMCwgMCwgMCwgLjYpXG4gICAgICAgIHBhZGRpbmcgMTJweCAxMnB4XG4gICAgICAgIG9wYWNpdHkgMFxuXG4gICAgLnByaWNlXG4gICAgICAgIGZvbnQtc2l6ZSAxNXB4XG4gICAgICAgIGNvbG9yICR3aGl0ZVxuXG4gICAgLnRhY2tJdGVtOmhvdmVyIC5tZXRhXG4gICAgICAgIG9wYWNpdHkgMVxuICAgICAgICB0cmFuc2l0aW9uIG9wYWNpdHkgLjJzXG5cblxuXG4gICAgK2JlbG93KDg2MHB4KVxuICAgICAgICAudXRpbGl0aWVzXG4gICAgICAgICAgICB3aWR0aCAxMDAlXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tIDIwcHhcbiAgICAgICAgICAgIHBhZGRpbmcgMTVweFxuXG4gICAgICAgICAgICA+IGFydGljbGVcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tIDE1cHhcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbSAxNXB4XG5cbiAgICAgICAgICAgIC5jb2xvckZpbHRlcnNcbiAgICAgICAgICAgICAgICBwXG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ24gY2VudGVyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQgMFxuXG4gICAgICAgICAgICAuZmF2b3JpdGVzXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbiBjZW50ZXJcbiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tIG5vbmVcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tIDBcbiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbSAwXG5cbiAgICAgICAgICAgICAgICAuYnV0dG9uXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoIGF1dG9cblxuICAgICAgICAgICAgLmZhdm9yaXRlc0xpc3RcbiAgICAgICAgICAgICAgICBwYWRkaW5nIC41JVxuXG4gICAgICAgICAgICAgICAgbGlcbiAgICAgICAgICAgICAgICAgICAgd2lkdGggMTUuNjUlXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbiAuNSVcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b20gMTUuNjUlXG5cbiAgICAgICAgICAgICAgICAubm9GYXZvcml0ZXNQcm9tcHRcbiAgICAgICAgICAgICAgICAgICAgd2lkdGggMTAwJVxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4gMFxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nIDElXG5cbiAgICAgICAgICAgIC5wcmljaW5nXG4gICAgICAgICAgICAgICAgZGlzcGxheSBub25lXG5cbiAgICAgICAgLnRhY2tDb250YWluZXJcbiAgICAgICAgICAgIHdpZHRoIDEwMCVcbiAgICAgICAgICAgIG1hcmdpbiAwXG5cblxuXG5cbiAgICArYmVsb3coNjAwcHgpXG5cbiAgICAgICAgLnV0aWxpdGllc1xuXG4gICAgICAgICAgICAuY29sb3JGaWx0ZXJzXG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbSAwXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbSAwXG4gICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b20gMFxuXG4gICAgICAgICAgICAgICAgdWxcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbiBjZW50ZXJcblxuICAgICAgICAgICAgICAgICAgICBsaVxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheSBpbmxpbmUtYmxvY2tcbiAgICAgICAgICAgICAgICAgICAgICAgIGZsb2F0IG5vbmVcblxuICAgICAgICAgICAgLmZhdm9yaXRlc1xuICAgICAgICAgICAgICAgIGRpc3BsYXkgbm9uZVxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20gbm9uZVxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b20gMFxuICAgICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tIDBcblxuICAgICAgICAgICAgLnByaWNpbmdcbiAgICAgICAgICAgICAgICBkaXNwbGF5IG5vbmVcblxuICAgICAgICAudGFja0xvYWRpbmdcbiAgICAgICAgICAgIG1hcmdpbi10b3AgMTAwcHhcblxuICAgICAgICAudGFja0NvbnRhaW5lclxuICAgICAgICAgICAgd2lkdGggMTAwJVxuXG4gICAgK2JlbG93KDQ1MHB4KVxuICAgICAgICAudGFja0l0ZW1cbiAgICAgICAgICAgIHdpZHRoIDMwLjUlXG4gICAgICAgICAgICBoZWlnaHQgMFxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b20gMzElXG4iXX0= */