.button,
a.button,
a.button:link,
a.button:visited {
  display: inline-block;
  font-family: 'Livory';
  font-style: italic;
  color: ffffff;
  background: #88101d;
  padding: 5px 10px;
}
a.button:hover {
  background: #410a10;
}
@font-face {
  font-family: 'Livory';
  src: url("../fonts/2B8A5F_0_0.eot");
  src: url("../fonts/2B8A5F_0_0.eot?#iefix") format('embedded-opentype'), url("../fonts/2B8A5F_0_0.woff") format('woff'), url("../fonts/2B8A5F_0_0.ttf") format('truetype');
  font-weight: normal;
}
@font-face {
  font-family: 'MonteCarlo';
  src: url("../fonts/2B8A5F_1_0.eot");
  src: url("../fonts/2B8A5F_1_0.eot?#iefix") format('embedded-opentype'), url("../fonts/2B8A5F_1_0.woff") format('woff'), url("../fonts/2B8A5F_1_0.ttf") format('truetype');
  font-weight: normal;
}
@font-face {
  font-family: 'Serifiqo';
  src: url("../fonts/2B8A5F_2_0.eot");
  src: url("../fonts/2B8A5F_2_0.eot?#iefix") format('embedded-opentype'), url("../fonts/2B8A5F_2_0.woff") format('woff'), url("../fonts/2B8A5F_2_0.ttf") format('truetype');
  font-weight: normal;
}
@font-face {
  font-family: 'FontAwesome';
  src: url("../fonts/font-awesome/fontawesome-webfont.eot");
  src: url("../fonts/font-awesome/fontawesome-webfont.eot?#iefix") format('embedded-opentype'), url("../fonts/font-awesome/fontawesome-webfont.woff") format('woff'), url("../fonts/font-awesome/fontawesome-webfont.ttf") format('truetype');
  font-weight: normal;
}
h1 {
  font-family: 'Serifiqo';
  font-size: 3rem;
  font-weight: lighter;
}
h2 {
  font-family: 'MonteCarlo';
  font-size: 2rem;
  color: #8a561e;
  font-weight: lighter;
}
h3 {
  font-family: 'Serifiqo';
  font-size: 1.6rem;
  line-height: 2rem;
  font-weight: lighter;
  color: #8a561e;
  margin: 0 0 8px;
}
p {
  font-size: 0.9rem;
  line-height: 1.3rem;
  margin: 0;
}
a,
a link,
a visited {
  color: #88101d;
  text-decoration: none;
  -webkit-transition: all 0.2s;
  -moz-transition: all 0.2s;
  -o-transition: all 0.2s;
  -ms-transition: all 0.2s;
  transition: all 0.2s;
}
hover {
  color: #8a561e;
  -webkit-transition: all 0.2s;
  -moz-transition: all 0.2s;
  -o-transition: all 0.2s;
  -ms-transition: all 0.2s;
  transition: all 0.2s;
}
.global-nav {
  color: #fff;
}
.global-nav  hover {
  color: #ffd88c;
}
.page-title {
  text-align: center;
  margin: 40px 0 30px;
}
.photo-credits {
  font-size: 0.7rem;
  line-height: 1rem;
  color: #a5a5a5;
}
.small {
  font-size: 12px;
  line-height: 16px;
}
*,
*:before,
*:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
html,
body {
  margin: 0;
  padding: 0;
}
body {
  font-family: 'Livory';
  font-size: 10px;
}
.center {
  width: 1200px;
  margin: 0 auto;
}
.content-container {
  padding: 30px 0;
}
body.home .content-container {
  padding: 0;
}
.global-footer {
  background: #b0977c;
  padding: 20px 0;
  margin-top: 60px;
}
.global-footer p {
  font-size: 0.7rem;
  line-height: 1rem;
  color: #fff;
  margin: 0;
}
.global-footer a {
  color: #ffd88c;
}
.global-footer a:hover {
  color: #fff;
}
.global-footer .center {
  overflow: hidden;
}
.global-footer .social {
  float: left;
  max-width: 300px;
}
.global-footer .social .facebook {
  display: block;
  float: left;
  width: 30px;
  height: 30px;
  font-size: 1.2rem;
  color: #fff;
  background: #7e5f4c;
  margin-right: 10px;
  padding-top: 3px;
  text-align: center;
}
.global-footer .social .facebook:hover {
  background: #88101d;
}
.global-footer .legal {
  float: right;
  text-align: right;
}
* {
  margin: 0;
}
html,
body {
  height: 100%;
}
.page-wrap {
  min-height: 100%;
/* equal to footer height */
  margin-bottom: -130px;
}
.page-wrap:after {
  content: "";
  display: block;
}
.global-footer {
  height: 70px;
  margin-top: 60px;
}
.page-wrap:after {
/* .push must be the same height as footer */
  height: 130px;
}
.global-header {
  margin-bottom: 30px;
}
.global-header .website-title {
  text-align: center;
  padding: 5px 0 7px;
}
.global-header .website-title h1 {
  margin: 0;
}
.global-header .website-title h2 {
  display: none;
  margin: -5px 0 0;
}
.global-header .global-nav {
  text-align: center;
  background: #410a10 url("../img/global/bg_nav.png") repeat-x center center;
}
.global-header .global-nav .nav-container {
  display: inline-block;
  background: #410a10;
  padding: 0 30px;
}
.global-header .global-nav a:link,
.global-header .global-nav a:visited {
  display: block;
  float: left;
  font-family: 'Serifiqo';
  font-size: 1.4rem;
  color: #fff;
  text-decoration: none;
  text-transform: uppercase;
  padding: 13px 20px 8px;
}
.global-header .global-nav a:hover {
  color: #ffd88c;
  -webkit-transition: color 0.2s ease;
  -moz-transition: color 0.2s ease;
  -o-transition: color 0.2s ease;
  -ms-transition: color 0.2s ease;
  transition: color 0.2s ease;
}
.global-header .global-nav a.active {
  color: #ffd88c;
}
.contact-info {
  text-align: center;
  margin-bottom: 30px;
}
body.faq .questions {
  width: 50%;
  margin: 0 auto;
}
body.faq .questions p.question {
  color: #7e5f4c;
}
body.faq .questions article {
  margin-bottom: 30px;
}
body.home .global-header {
  padding: 20px 0 190px;
  margin-bottom: 0;
}
body.home .website-title {
  position: absolute;
  top: 85px;
  width: 100%;
  padding: 0;
}
body.home .website-title h1 {
  font-size: 5.5rem;
  margin-bottom: 10px;
}
body.home .website-title h2 {
  display: block;
}
body.home .content-container {
  padding-bottom: 30px;
}
body.home .center {
  overflow: hidden;
}
body.home .hero {
  background: #000 url("../img/home/hero.jpg") no-repeat center center;
  -webkit-background-size: auto 100%;
  -moz-background-size: auto 100%;
  background-size: auto 100%;
  height: 500px;
  margin-bottom: 30px;
}
body.home .hero article {
  float: right;
  width: 350px;
  background: rgba(255,255,255,0.7);
  padding: 25px;
}
body.home p {
  margin: 0;
}
body.home .intro {
  float: left;
  width: 40%;
  padding-right: 20px;
}
body.home .gallery--spotlight {
  float: left;
  width: 60%;
  padding-left: 20px;
  border-left: 2px solid #e6e6e6;
}
body.home .gallery--spotlight h3 {
  margin-bottom: 20px;
}
body.home .gallery--spotlight ul {
  margin: 0;
  padding: 0;
  list-style: none;
  overflow: hidden;
}
body.home .gallery--spotlight li {
  float: left;
  width: 22%;
  margin-left: 4%;
}
body.home .gallery--spotlight li:first-child {
  margin-left: 0;
}
body.home .gallery--spotlight img {
  width: 100%;
  height: 100%;
}
body.tack .page-wrap > .center {
  overflow: hidden;
}
body.tack .contact-gina {
  text-align: center;
  margin-bottom: 30px;
}
body.tack .color-filters {
  background: #e6e6e6;
  overflow: hidden;
  text-align: center;
  margin-bottom: 30px;
}
body.tack .color-filters > * {
  vertical-align: top;
}
body.tack .color-filters p {
  display: inline-block;
  font-size: 16px;
  padding: 10px 15px 10px 0;
}
body.tack .color-filters ul {
  display: inline-block;
  margin: 0;
  padding: 0;
  overflow: hidden;
}
body.tack .color-filters ul li {
  display: block;
  float: left;
  font-size: 16px;
  color: #88101d;
  padding: 10px 15px;
  cursor: pointer;
}
body.tack .color-filters ul li:hover {
  background: #88101d;
  color: ffffff;
  -webkit-transition: all 0.2s;
  -moz-transition: all 0.2s;
  -o-transition: all 0.2s;
  -ms-transition: all 0.2s;
  transition: all 0.2s;
}
body.tack .color-filters ul li.active {
  background: #88101d;
  color: ffffff;
}
body.tack .utilities {
  float: left;
  width: 25%;
  background: #ebe7e3;
  padding: 20px;
}
body.tack .utilities h3 {
  color: #410a10;
}
body.tack .utilities p {
  color: #7e5f4c;
}
body.tack .utilities .button {
  display: block;
  font-size: 16px;
  text-align: center;
  padding: 10px 15px;
}
body.tack .favorites-list {
  list-style: none;
  background: #d6cdbc;
  margin: 20px 0;
  padding: 10px;
}
body.tack .favorites-list li {
  display: inline-block;
  width: 47%;
  background: #f00;
  margin: 0 1% 1%;
  vertical-align: top;
}
body.tack .misc {
  background: url("../img/global/emphasisFlourish.png") 0 center no-repeat;
  margin-top: 40px;
  padding-left: 40px;
}
body.tack .tack-images {
  float: right;
  width: 75%;
  overflow: hidden;
  margin: 0 -1.25%;
}
body.tack .tack-images > div {
  display: none;
  vertical-align: top;
  width: 22.5%;
  height: 177px;
  margin: 0 1.25% 21px;
  overflow: hidden;
}
body.tack .tack-images > div img {
  width: 100%;
  background: #88101d;
}
/*# sourceMappingURL=data:application/json;base64, */